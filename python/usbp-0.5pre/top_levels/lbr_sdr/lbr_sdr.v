// File: lbr_sdr.v
// Generated by MyHDL 0.7dev
// Date: Mon Sep  7 16:10:57 2009

`timescale 1ns/10ps

module lbr_sdr (
    reset,
    sys_clk,
    IFCLK,
    FLAGA,
    FLAGB,
    FLAGC,
    FLAGD,
    SLOE,
    SLRD,
    SLWR,
    FIFOADR,
    PKTEND,
    FDI,
    FDO,
    LEDs,
    SS,
    SCK,
    MOSI,
    MISO,
    SCL_i,
    SCL_o,
    SDA_i,
    SDA_o,
    SCLK,
    SDATA,
    LR,
    EN4V,
    NRST
);

input reset;
input sys_clk;
input IFCLK;
input FLAGA;
input FLAGB;
input FLAGC;
input FLAGD;
output SLOE;
reg SLOE;
output SLRD;
reg SLRD;
output SLWR;
reg SLWR;
output [1:0] FIFOADR;
reg [1:0] FIFOADR;
output PKTEND;
reg PKTEND;
input [7:0] FDI;
output [7:0] FDO;
reg [7:0] FDO;
output [7:0] LEDs;
wire [7:0] LEDs;
output [7:0] SS;
reg [7:0] SS;
output SCK;
reg SCK;
output MOSI;
reg MOSI;
input MISO;
input SCL_i;
input SCL_o;
input SDA_i;
input SDA_o;
input SCLK;
input SDATA;
input LR;
output EN4V;
wire EN4V;
output NRST;
wire NRST;

reg [7:0] g0_dat_i;
reg wb_cyc;
wire fifo_rd_twi;
wire wb_rst;
reg [3:0] wb_sel;
wire fifo_rd_pcm;
wire [7:0] led_gpio;
wire fifo_rd_rmp;
reg [7:0] spi_dat_i;
reg fifo_full;
reg fifo_rd_spi;
reg [7:0] led;
wire [7:0] fifo_di;
reg [7:0] fifo_do;
reg [7:0] rmp_dat_i;
wire fifo_hold;
reg fifo_wr_rmp;
reg loopback;
reg fifo_empty;
wire [7:0] pcm_dat_i;
reg g1_ack;
reg [7:0] twi_dat_i;
reg wb_we;
reg [7:0] fifo_di_spi;
reg wb_lock;
reg fifo_wr_spi;
wire wb_ack;
reg [7:0] fifo_di_rmp;
reg fifo_wr_pcm;
wire [7:0] led_sel;
wire rmp_ack;
reg [7:0] fifo_di_pcm;
reg [7:0] fx2_dbg;
reg fifo_do_vld;
wire [7:0] wb_dat_o;
reg g0_ack;
wire fifo_wr_twi;
wire [7:0] wb_dat_i;
reg wb_stb;
wire fifo_rd;
wire pcm_ack;
wire spi_ack;
wire twi_ack;
reg [7:0] g1_dat_i;
wire fifo_wr;
wire [7:0] fifo_di_twi;
wire wb_clk;
wire [15:0] wb_adr;
reg pcm0___LR;
wire [7:0] pcm0_EXT;
wire [7:0] pcm0_adc_data;
reg pcm0_sSCLK;
reg [4:0] pcm0_index;
reg pcm0__lr;
reg pcm0_sSDATA;
wire pcm0_enable;
wire pcm0_rmpLch;
reg pcm0___SDATA;
wire pcm0_rmpRch;
wire pcm0_reset;
reg pcm0___SCLK;
wire [7:0] pcm0_CFG;
reg [23:0] pcm0_rmpChanL;
reg pcm0_sLR;
reg [23:0] pcm0_ChanR;
reg [23:0] pcm0_ChanL;
reg [23:0] pcm0_rmpChanR;
reg [23:0] pcm0_pcm4220_tmpL;
reg pcm0_pcm4220__lr;
wire pcm0_pcm4220_pos_sclk;
reg pcm0_pcm4220__sclk;
wire pcm0_pcm4220_pos_lr;
reg [5:0] pcm0_pcm4220_BitCnt;
wire pcm0_pcm4220_neg_lr;
wire pcm0_pcm4220_neg_sclk;
reg [23:0] pcm0_pcm4220_tmpR;
wire rmp0_wb_acc;
wire rmp0_enable;
reg [9:0] rmp0_wcnt;
wire rmp0_wb_wr;
reg [7:0] rmp0_ramp;
wire [7:0] rmp0_CFG;
reg rmp0_regFile__wb_ack;
reg [7:0] rmp0_regFile__wb_do;
wire rmp0_regFile__wb_acc;
wire rmp0_regFile__wb_wr;
reg rmp0_regFile__wb_sel;
wire [7:0] twi0_CTR;
reg twi0_rx_fifo_full;
wire [7:0] twi0_tx_fifo_di;
wire [7:0] twi0_tx_fifo_do;
wire [7:0] twi0_PRERhi;
wire twi0_ctr_txrst;
reg twi0_tx_fifo_full;
wire twi0_rx_fifo_wr;
wire twi0_tx_fifo_rd;
wire [7:0] twi0_PRERlo;
wire twi0_wb_acc;
wire twi0_reset;
reg twi0_rx_fifo_empty;
wire twi0_wb_wr;
wire [7:0] twi0_rx_fifo_do;
wire [7:0] twi0_rx_fifo_di;
wire [7:0] twi0_CR;
wire [7:0] twi0_RXR;
wire twi0_ctr_rxrst;
wire twi0_rx_fifo_rd;
wire [7:0] twi0_TXR;
wire twi0_tx_fifo_wr;
wire [7:0] twi0_SR;
reg twi0_tx_fifo_empty;
reg [2:0] twi0_txFifo_rp;
wire [2:0] twi0_txFifo_rp_p1;
reg twi0_txFifo_gb;
reg [2:0] twi0_txFifo_wp;
wire [2:0] twi0_txFifo_wp_p1;
reg [2:0] twi0_rxFifo_rp;
wire [2:0] twi0_rxFifo_rp_p1;
reg twi0_rxFifo_gb;
reg [2:0] twi0_rxFifo_wp;
wire [2:0] twi0_rxFifo_wp_p1;
reg twi0_regFile__wb_ack;
reg [7:0] twi0_regFile__wb_do;
wire twi0_regFile__wb_acc;
wire twi0_regFile__wb_wr;
reg twi0_regFile__wb_sel;
wire [7:0] spi0_SPTC;
reg spi0__fifo_full;
reg spi0__fifo_wr;
wire [7:0] spi0_SPTX;
wire [7:0] spi0_tx_fifo_di;
wire [7:0] spi0_tx_fifo_do;
reg spi0_rx_fifo_wr;
reg spi0_cr_msse;
reg [1:0] spi0_state;
reg [7:0] spi0_SPSR;
wire [7:0] spi0_SPSS;
wire spi0_cr_freeze;
reg spi0_rx_fifo_full;
reg [11:0] spi0_clkcnt;
reg spi0_tx_fifo_rd;
wire spi0_wb_acc;
reg spi0_reset;
reg spi0_cr_rxrst;
reg spi0_rx_fifo_empty;
reg spi0_ena;
wire spi0_wb_wr;
reg spi0__fifo_rd;
reg spi0_rx_fifo_rd;
reg spi0_tx_fifo_full;
wire spi0_cr_wb_sel;
reg spi0_cr_spe;
wire [7:0] spi0_rx_fifo_do;
reg [7:0] spi0_rx_fifo_di;
reg spi0_cr_cpha;
reg spi0__fifo_empty;
reg spi0_cr_cpol;
reg spi0__miso;
reg [7:0] spi0__fifo_do;
reg spi0_cr_txrst;
wire [7:0] spi0_SPRX;
reg [7:0] spi0_treg;
reg spi0_tx_fifo_wr;
reg [2:0] spi0_bcnt;
wire [7:0] spi0_SPXX;
reg spi0__sck;
reg spi0__ss;
wire [7:0] spi0_SPRC;
reg spi0_tx_fifo_empty;
wire [7:0] spi0_SPCR;
reg spi0_cr_loop;
reg [2:0] spi0_txFifo_rp;
wire [2:0] spi0_txFifo_rp_p1;
reg spi0_txFifo_gb;
reg [2:0] spi0_txFifo_wp;
wire [2:0] spi0_txFifo_wp_p1;
reg [2:0] spi0_rxFifo_rp;
wire [2:0] spi0_rxFifo_rp_p1;
reg spi0_rxFifo_gb;
reg [2:0] spi0_rxFifo_wp;
wire [2:0] spi0_rxFifo_wp_p1;
reg spi0_regFile__wb_ack;
reg [7:0] spi0_regFile__wb_do;
wire spi0_regFile__wb_acc;
wire spi0_regFile__wb_wr;
reg spi0_regFile__wb_sel;
reg [7:0] gpio1_llgpio;
reg [7:0] gpio1__gpio_t;
reg [7:0] gpio1_ctrl;
wire gpio1_wb_wr;
reg [7:0] gpio1_lgpio;
wire [7:0] gpio1_mask;
wire [7:0] gpio1__gpio_i;
reg [7:0] gpio1_line;
wire gpio1_wb_acc;
reg [7:0] gpio1__gpio_o;
reg [7:0] gpio0_llgpio;
reg [7:0] gpio0__gpio_t;
reg [7:0] gpio0_ctrl;
wire gpio0_wb_wr;
reg [7:0] gpio0_lgpio;
wire [7:0] gpio0_mask;
wire [7:0] gpio0__gpio_i;
reg [7:0] gpio0_line;
wire gpio0_wb_acc;
reg [7:0] gpio0__gpio_o;
reg fifo_intf_i_fifo_empty;
reg fifo_intf__lp_fifo_wr;
reg fifo_intf_wb_fifo_wr;
reg [7:0] fifo_intf_i_fifo_di;
wire [7:0] fifo_intf_fx2_wb_di;
reg fifo_intf_ireset;
wire [7:0] fifo_intf_i_fifo_do;
reg fifo_intf_fx2_wb_rd;
reg [31:0] fifo_intf_err_wr_fxfifo;
reg fifo_intf_fx2_fifo_full;
wire [7:0] fifo_intf_lp_fifo_di;
reg [7:0] fifo_intf_lp_fifo_do;
reg fifo_intf_wb_cmd_in_prog;
reg fifo_intf_i_fifo_wr;
reg [7:0] fifo_intf_fx2_wb_do;
reg [31:0] fifo_intf_err_rd_ififo;
reg fifo_intf_fx2_fifo_rd;
reg fifo_intf_fx2_wb_full;
wire fifo_intf_i_fifo_do_vld;
reg fifo_intf_lp_fifo_full;
reg fifo_intf_wb_fifo_full;
wire fifo_intf_lp_fifo_wr;
reg [31:0] fifo_intf_err_rd_fxfifo;
wire fifo_intf_fx2_wb_di_vld;
wire [7:0] fifo_intf_wb_fifo_do;
wire fifo_intf_wb_fifo_rd;
reg fifo_intf__lp_fifo_rd;
reg [7:0] fifo_intf_fx2_dbg;
wire fifo_intf_fx2_fifo_di_vld;
reg [7:0] fifo_intf_wb_fifo_di;
reg fifo_intf_fx2_fifo_wr;
wire fifo_intf_wb_fifo_do_vld;
wire fifo_intf_lp_fifo_rd;
reg fifo_intf_i_fifo_full;
reg fifo_intf_lp_fifo_do_vld;
reg fifo_intf_wb_fifo_empty;
reg fifo_intf_fx2_fifo_empty;
reg fifo_intf_i_fifo_rd;
wire [7:0] fifo_intf_fx2_fifo_di;
reg fifo_intf_fx2_wb_empty;
reg fifo_intf_dbg_it;
reg fifo_intf_lp_fifo_empty;
reg [31:0] fifo_intf_err_wr_ififo;
reg [7:0] fifo_intf_fx2_fifo_do;
reg fifo_intf_fx2_wb_wr;
reg fifo_intf_ex_fifo_aemptyb;
reg fifo_intf_ex_fifo_aemptya;
reg fifo_intf_ex_fifo_nfulla;
reg fifo_intf_ex_fifo_nfullb;
reg fifo_intf_ex_fifo_fifoB__rd;
reg [9:0] fifo_intf_ex_fifo_fifoB_wptr;
reg [1:0] fifo_intf_ex_fifo_fifoB__empty;
wire [7:0] fifo_intf_ex_fifo_fifoB_din_mem;
reg [9:0] fifo_intf_ex_fifo_fifoB_rptr;
reg [9:0] fifo_intf_ex_fifo_fifoB__rptr_d;
reg fifo_intf_ex_fifo_fifoB__vld;
reg [9:0] fifo_intf_ex_fifo_fifoB__rptr_c;
wire [9:0] fifo_intf_ex_fifo_fifoB_wptr_p1;
wire [9:0] fifo_intf_ex_fifo_fifoB_wptr_p2;
wire [7:0] fifo_intf_ex_fifo_fifoB_dout_mem;
reg [7:0] fifo_intf_ex_fifo_fifoB_fmem__din;
reg fifo_intf_ex_fifo_fifoB_fmem__wr;
reg [7:0] fifo_intf_ex_fifo_fifoB_fmem__dout;
reg [9:0] fifo_intf_ex_fifo_fifoB_fmem__addr_w;
reg fifo_intf_ex_fifo_fifoA__rd;
reg [9:0] fifo_intf_ex_fifo_fifoA_wptr;
reg [1:0] fifo_intf_ex_fifo_fifoA__empty;
wire [7:0] fifo_intf_ex_fifo_fifoA_din_mem;
reg [9:0] fifo_intf_ex_fifo_fifoA_rptr;
reg [9:0] fifo_intf_ex_fifo_fifoA__rptr_d;
reg fifo_intf_ex_fifo_fifoA__vld;
reg [9:0] fifo_intf_ex_fifo_fifoA__rptr_c;
wire [9:0] fifo_intf_ex_fifo_fifoA_wptr_p1;
wire [9:0] fifo_intf_ex_fifo_fifoA_wptr_p2;
wire [7:0] fifo_intf_ex_fifo_fifoA_dout_mem;
reg [7:0] fifo_intf_ex_fifo_fifoA_fmem__din;
reg fifo_intf_ex_fifo_fifoA_fmem__wr;
reg [7:0] fifo_intf_ex_fifo_fifoA_fmem__dout;
reg [9:0] fifo_intf_ex_fifo_fifoA_fmem__addr_w;
reg fifo_intf_wb_fifo_aemptyb;
reg fifo_intf_wb_fifo_aemptya;
reg fifo_intf_wb_fifo_nfulla;
reg fifo_intf_wb_fifo_nfullb;
reg fifo_intf_wb_fifo_fifoB__rd;
reg [8:0] fifo_intf_wb_fifo_fifoB_wptr;
reg [1:0] fifo_intf_wb_fifo_fifoB__empty;
wire [7:0] fifo_intf_wb_fifo_fifoB_din_mem;
reg [8:0] fifo_intf_wb_fifo_fifoB_rptr;
reg [8:0] fifo_intf_wb_fifo_fifoB__rptr_d;
reg fifo_intf_wb_fifo_fifoB__vld;
reg [8:0] fifo_intf_wb_fifo_fifoB__rptr_c;
wire [8:0] fifo_intf_wb_fifo_fifoB_wptr_p1;
wire [8:0] fifo_intf_wb_fifo_fifoB_wptr_p2;
wire [7:0] fifo_intf_wb_fifo_fifoB_dout_mem;
reg [7:0] fifo_intf_wb_fifo_fifoB_fmem__din;
reg fifo_intf_wb_fifo_fifoB_fmem__wr;
reg [7:0] fifo_intf_wb_fifo_fifoB_fmem__dout;
reg [8:0] fifo_intf_wb_fifo_fifoB_fmem__addr_w;
reg fifo_intf_wb_fifo_fifoA__rd;
reg [8:0] fifo_intf_wb_fifo_fifoA_wptr;
reg [1:0] fifo_intf_wb_fifo_fifoA__empty;
wire [7:0] fifo_intf_wb_fifo_fifoA_din_mem;
reg [8:0] fifo_intf_wb_fifo_fifoA_rptr;
reg [8:0] fifo_intf_wb_fifo_fifoA__rptr_d;
reg fifo_intf_wb_fifo_fifoA__vld;
reg [8:0] fifo_intf_wb_fifo_fifoA__rptr_c;
wire [8:0] fifo_intf_wb_fifo_fifoA_wptr_p1;
wire [8:0] fifo_intf_wb_fifo_fifoA_wptr_p2;
wire [7:0] fifo_intf_wb_fifo_fifoA_dout_mem;
reg [7:0] fifo_intf_wb_fifo_fifoA_fmem__din;
reg fifo_intf_wb_fifo_fifoA_fmem__wr;
reg [7:0] fifo_intf_wb_fifo_fifoA_fmem__dout;
reg [8:0] fifo_intf_wb_fifo_fifoA_fmem__addr_w;
reg fifo_intf_wb_controller_wb_go;
reg [7:0] fifo_intf_wb_controller_cs_dat_i;
reg [7:0] fifo_intf_wb_controller_wb_ctrl0;
reg fifo_intf_wb_controller_wb_wr;
wire [7:0] fifo_intf_wb_controller_wb_dat;
reg fifo_intf_wb_controller_wb_rd;
wire [7:0] fifo_intf_wb_controller_i_dat_i;
reg fifo_intf_wb_controller_fifo_rd;
reg fifo_intf_wb_controller_fifo_wr;
wire [15:0] fifo_intf_wb_controller_wb_addr;
reg [7:0] fifo_intf_wb_controller_wb_cmd_wb_idat;
reg [7:0] fifo_intf_wb_controller_wb_cmd_addr_lo;
reg [7:0] fifo_intf_wb_controller_wb_cmd_wb_cmd;
reg [3:0] fifo_intf_wb_controller_wb_cmd_reg_sel;
reg [7:0] fifo_intf_wb_controller_wb_cmd_addr_hi;
reg [7:0] fifo_intf_wb_controller_wb_cmd_sbyte7;
reg [7:0] fifo_intf_wb_controller_wb_cmd_sbyte6;
reg [7:0] fifo_intf_wb_controller_wb_cmd_sbyte1;
reg [7:0] fifo_intf_wb_controller_wb_cmd_sbyte0;
reg [15:0] fifo_intf_wb_controller_wb_cmd_wb_iaddr;
reg [7:0] fifo_intf_wb_controller_wb_cmd_wb_len;
reg [7:0] fifo_intf_wb_controller_wb_cmd_wb_cnt;
reg fifo_intf_fx2_ep2_empty;
reg fifo_intf_fx2__fifo_wr;
reg [1:0] fifo_intf_fx2__fifoadr;
wire fifo_intf_fx2__slrd;
wire fifo_intf_fx2__pktend;
reg fifo_intf_fx2_ep4_empty;
wire fifo_intf_fx2__sloe;
reg [7:0] fifo_intf_fx2_ep4_din;
wire fifo_intf_fx2_ep4_read;
reg fifo_intf_fx2_ep8_full;
wire fifo_intf_fx2_ep2_read;
reg fifo_intf_fx2_ep6_full;
wire fifo_intf_fx2__vld;
wire fifo_intf_fx2_ep8_write;
wire fifo_intf_fx2_ep6_write;
reg fifo_intf_fx2__bus_wr;
reg [7:0] fifo_intf_fx2_ep2_din;
wire fifo_intf_fx2__slwr;
reg fifo_intf_fx2_arb__slwr6;
reg fifo_intf_fx2_arb__slwr8;
reg fifo_intf_fx2_arb__pktend;
reg [3:0] fifo_intf_fx2_arb_state;
reg fifo_intf_fx2_arb__sloe;
reg fifo_intf_fx2_arb__slrd2;
reg fifo_intf_fx2_arb__slrd4;

reg [7:0] pcm0_rwRegisters [0:2-1];
reg [7:0] pcm0_adc_buf [0:6-1];
reg rmp0_rwWr [0:1-1];
reg rmp0_rwRd [0:1-1];
reg [7:0] rmp0_rwRegisters [0:1-1];
reg twi0_rwWr [0:5-1];
reg twi0_roRd [0:2-1];
reg [7:0] twi0_rwRegisters [0:5-1];
reg [7:0] twi0_roRegisters [0:2-1];
reg twi0_rwRd [0:5-1];
reg [7:0] twi0_txFifo_mem [0:8-1];
reg [7:0] twi0_rxFifo_mem [0:8-1];
reg spi0_rwWr [0:4-1];
reg spi0_roRd [0:4-1];
reg [7:0] spi0_rwRegisters [0:4-1];
reg [7:0] spi0_roRegisters [0:4-1];
reg spi0_rwRd [0:4-1];
reg [7:0] spi0_txFifo_mem [0:8-1];
reg [7:0] spi0_rxFifo_mem [0:8-1];
reg [7:0] fifo_intf_ex_fifo_fifoB_fmem_mem [0:1024-1];
reg [7:0] fifo_intf_ex_fifo_fifoA_fmem_mem [0:1024-1];
reg [7:0] fifo_intf_wb_fifo_fifoB_fmem_mem [0:512-1];
reg [7:0] fifo_intf_wb_fifo_fifoA_fmem_mem [0:512-1];

assign fifo_rd_twi = 0;
assign fifo_rd_rmp = 0;
assign fifo_hold = 0;
assign pcm_dat_i = 0;
assign fifo_wr_twi = 0;
assign pcm_ack = 0;
assign fifo_di_twi = 0;
assign twi0_tx_fifo_di = 0;
assign twi0_rx_fifo_wr = 0;
assign twi0_tx_fifo_rd = 0;
assign twi0_reset = 0;
assign twi0_rx_fifo_di = 0;
assign twi0_RXR = 0;
assign twi0_rx_fifo_rd = 0;
assign twi0_tx_fifo_wr = 0;
assign twi0_SR = 0;
assign spi0_SPTC = 0;
assign spi0_cr_freeze = 0;
assign spi0_cr_wb_sel = 0;
assign spi0_SPRC = 0;
assign gpio1__gpio_i = 0;
assign gpio0__gpio_i = 0;



assign LEDs = led;


assign wb_dat_i = (((((g0_dat_i | g1_dat_i) | spi_dat_i) | twi_dat_i) | rmp_dat_i) | pcm_dat_i);
assign wb_ack = (((((g0_ack | g1_ack) | spi_ack) | twi_ack) | rmp_ack) | pcm_ack);

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_TXFIFO_RTL_GUARD_BIT
    if (wb_clk) begin
        spi0_txFifo_gb <= 1'b0;
    end
    else begin
        if (spi0_cr_txrst) begin
            spi0_txFifo_gb <= 1'b0;
        end
        else begin
            if (((spi0_txFifo_wp_p1 == spi0_txFifo_rp) && spi0_tx_fifo_wr)) begin
                spi0_txFifo_gb <= 1'b1;
            end
            else begin
                if (spi0_tx_fifo_rd) begin
                    spi0_txFifo_gb <= 1'b0;
                end
            end
        end
    end
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_TXFIFO_RTL_WP_REG
    if (wb_clk) begin
        spi0_txFifo_wp <= 0;
    end
    else begin
        if (spi0_cr_txrst) begin
            spi0_txFifo_wp <= 0;
        end
        else begin
            spi0_txFifo_wp <= spi0_txFifo_wp_p1;
        end
    end
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_TXFIFO_RTL_RP_REG
    if (wb_clk) begin
        spi0_txFifo_rp <= 0;
    end
    else begin
        if (spi0_cr_txrst) begin
            spi0_txFifo_rp <= 0;
        end
        else begin
            if (spi0_tx_fifo_rd) begin
                spi0_txFifo_rp <= spi0_txFifo_rp_p1;
            end
        end
    end
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_TXFIFO_RTL_MEM
    if (spi0_tx_fifo_wr) begin
        spi0_txFifo_mem[spi0_txFifo_wp] <= spi0_tx_fifo_di;
    end
end


assign spi0_txFifo_wp_p1 = ((spi0_txFifo_wp + 1) % (2 ** 3));


assign spi0_tx_fifo_do = spi0_txFifo_mem[spi0_txFifo_rp];


assign spi0_txFifo_rp_p1 = ((spi0_txFifo_rp + 1) % (2 ** 3));

always @(spi0_txFifo_rp, spi0_txFifo_gb, spi0_txFifo_wp) begin: LBR_SDR_SPI0_TXFIFO_RTL_ASSIGNMENTS
    if (((spi0_txFifo_wp == spi0_txFifo_rp) && (!spi0_txFifo_gb))) begin
        spi0_tx_fifo_empty <= 1'b1;
    end
    else begin
        spi0_tx_fifo_empty <= 1'b0;
    end
    if (((spi0_txFifo_wp == spi0_txFifo_rp) && spi0_txFifo_gb)) begin
        spi0_tx_fifo_full <= 1'b1;
    end
    else begin
        spi0_tx_fifo_full <= 1'b0;
    end
end

always @(spi0_clkcnt, wb_rst) begin: LBR_SDR_SPI0_RTL_ASSIGNMENT
    spi0_reset <= (!wb_rst);
    if ((spi0_clkcnt > 0)) begin
        spi0_ena <= 1'b0;
    end
    else begin
        spi0_ena <= 1'b1;
    end
end


assign spi0_SPCR = spi0_rwRegisters[0];
assign spi0_SPTX = spi0_rwRegisters[1];
assign spi0_SPSS = spi0_rwRegisters[2];
assign spi0_SPXX = spi0_rwRegisters[3];
assign spi0_roRegisters[0] = spi0_SPSR;
assign spi0_roRegisters[1] = spi0_SPRX;
assign spi0_roRegisters[2] = spi0_SPTC;
assign spi0_roRegisters[3] = spi0_SPRC;

always @(posedge wb_clk) begin: LBR_SDR_SPI0_RTL_STATE_AND_MORE
    if ((!spi0_cr_spe)) begin
        spi0_state <= 0;
        spi0_bcnt <= 0;
        spi0_treg <= 0;
        spi0__fifo_rd <= 1'b0;
        spi0__fifo_wr <= 1'b0;
        spi0__sck <= 1'b0;
        spi0__ss <= 1'b0;
    end
    else begin
        if ((!spi0_cr_freeze)) begin
            if ((spi0_state == 0)) begin
                spi0_bcnt <= 7;
                spi0_treg <= spi0__fifo_do;
                spi0__sck <= spi0_cr_cpol;
                spi0__ss <= 1'b1;
                if (((!spi0__fifo_empty) && (!spi0__fifo_full))) begin
                    spi0__fifo_rd <= 1'b1;
                    spi0_state <= 1;
                    spi0__ss <= 1'b0;
                    if (spi0_cr_cpha) begin
                        spi0__sck <= (!spi0__sck);
                    end
                end
            end
            if ((spi0_state == 1)) begin
                if (spi0_ena) begin
                    spi0_state <= 3;
                    spi0__sck <= (!spi0__sck);
                end
            end
            if ((spi0_state == 3)) begin
                if (spi0_ena) begin
                    spi0_treg <= {spi0__miso, spi0_treg[8-1:1]};
                    spi0_bcnt <= (spi0_bcnt - 1);
                end
                if ((spi0_bcnt == 0)) begin
                    spi0_state <= 0;
                    spi0__sck <= spi0_cr_cpol;
                    spi0__ss <= 1'b1;
                    spi0__fifo_wr <= 1'b1;
                end
                else begin
                    spi0_state <= 1;
                    spi0__sck <= (!spi0__sck);
                end
            end
            if ((spi0_state == 2)) begin
                spi0_state <= 0;
            end
        end
    end
end

always @(MISO, spi0_cr_msse, spi0_treg, spi0_SPSS, spi0__sck, spi0__ss, spi0_cr_loop) begin: LBR_SDR_SPI0_RTL_SPI_SIGS
    reg _miso_next;
    SCK <= spi0__sck;
    if (spi0_cr_loop) begin
        MOSI <= 1'b0;
        _miso_next = spi0_treg[0];
    end
    else begin
        MOSI <= spi0_treg[0];
        spi0__miso <= MISO;
    end
    if (spi0_cr_msse) begin
        SS <= (~spi0_SPSS);
    end
    else begin
        if (spi0__ss) begin
            SS <= 255;
        end
        else begin
            SS <= (~spi0_SPSS);
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_SPI0_RTL_CLK_DIV
    if ((spi0_cr_spe && (spi0_clkcnt != 0) && (spi0_state != 0))) begin
        spi0_clkcnt <= ((spi0_clkcnt - 1) % (2 ** 12));
    end
    else begin
        if ((spi0_SPXX == 0)) begin
            spi0_clkcnt <= 0;
        end
        else begin
            if ((spi0_SPXX == 1)) begin
                spi0_clkcnt <= 1;
            end
            else begin
                if ((spi0_SPXX == 2)) begin
                    spi0_clkcnt <= 3;
                end
                else begin
                    if ((spi0_SPXX == 3)) begin
                        spi0_clkcnt <= 7;
                    end
                    else begin
                        if ((spi0_SPXX == 4)) begin
                            spi0_clkcnt <= 15;
                        end
                        else begin
                            if ((spi0_SPXX == 5)) begin
                                spi0_clkcnt <= 31;
                            end
                            else begin
                                if ((spi0_SPXX == 6)) begin
                                    spi0_clkcnt <= 63;
                                end
                                else begin
                                    if ((spi0_SPXX == 7)) begin
                                        spi0_clkcnt <= 127;
                                    end
                                    else begin
                                        if ((spi0_SPXX == 8)) begin
                                            spi0_clkcnt <= 255;
                                        end
                                        else begin
                                            if ((spi0_SPXX == 9)) begin
                                                spi0_clkcnt <= 511;
                                            end
                                            else begin
                                                if ((spi0_SPXX == 10)) begin
                                                    spi0_clkcnt <= 1023;
                                                end
                                                else begin
                                                    if ((spi0_SPXX == 11)) begin
                                                        spi0_clkcnt <= 2047;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

always @(spi0_rx_fifo_full, spi0_tx_fifo_empty, spi0_rx_fifo_empty, spi0_SPCR, spi0_tx_fifo_full) begin: LBR_SDR_SPI0_RTL_BIT_ASSIGNMENTS
    spi0_cr_loop <= spi0_SPCR[0];
    spi0_cr_spe <= spi0_SPCR[1];
    spi0_cr_cpol <= spi0_SPCR[3];
    spi0_cr_cpha <= spi0_SPCR[4];
    spi0_cr_txrst <= spi0_SPCR[5];
    spi0_cr_rxrst <= spi0_SPCR[6];
    spi0_cr_msse <= spi0_SPCR[7];
    spi0_SPSR[0] <= spi0_rx_fifo_empty;
    spi0_SPSR[1] <= spi0_rx_fifo_full;
    spi0_SPSR[2] <= spi0_tx_fifo_empty;
    spi0_SPSR[3] <= spi0_tx_fifo_full;
    spi0_SPSR[4] <= 1'b0;
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_RXFIFO_RTL_GUARD_BIT
    if (wb_clk) begin
        spi0_rxFifo_gb <= 1'b0;
    end
    else begin
        if (spi0_cr_rxrst) begin
            spi0_rxFifo_gb <= 1'b0;
        end
        else begin
            if (((spi0_rxFifo_wp_p1 == spi0_rxFifo_rp) && spi0_rx_fifo_wr)) begin
                spi0_rxFifo_gb <= 1'b1;
            end
            else begin
                if (spi0_rx_fifo_rd) begin
                    spi0_rxFifo_gb <= 1'b0;
                end
            end
        end
    end
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_RXFIFO_RTL_WP_REG
    if (wb_clk) begin
        spi0_rxFifo_wp <= 0;
    end
    else begin
        if (spi0_cr_rxrst) begin
            spi0_rxFifo_wp <= 0;
        end
        else begin
            spi0_rxFifo_wp <= spi0_rxFifo_wp_p1;
        end
    end
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_RXFIFO_RTL_RP_REG
    if (wb_clk) begin
        spi0_rxFifo_rp <= 0;
    end
    else begin
        if (spi0_cr_rxrst) begin
            spi0_rxFifo_rp <= 0;
        end
        else begin
            if (spi0_rx_fifo_rd) begin
                spi0_rxFifo_rp <= spi0_rxFifo_rp_p1;
            end
        end
    end
end

always @(posedge spi0_reset) begin: LBR_SDR_SPI0_RXFIFO_RTL_MEM
    if (spi0_rx_fifo_wr) begin
        spi0_rxFifo_mem[spi0_rxFifo_wp] <= spi0_rx_fifo_di;
    end
end


assign spi0_rxFifo_wp_p1 = ((spi0_rxFifo_wp + 1) % (2 ** 3));


assign spi0_rx_fifo_do = spi0_rxFifo_mem[spi0_rxFifo_rp];


assign spi0_rxFifo_rp_p1 = ((spi0_rxFifo_rp + 1) % (2 ** 3));

always @(spi0_rxFifo_rp, spi0_rxFifo_gb, spi0_rxFifo_wp) begin: LBR_SDR_SPI0_RXFIFO_RTL_ASSIGNMENTS
    if (((spi0_rxFifo_wp == spi0_rxFifo_rp) && (!spi0_rxFifo_gb))) begin
        spi0_rx_fifo_empty <= 1'b1;
    end
    else begin
        spi0_rx_fifo_empty <= 1'b0;
    end
    if (((spi0_rxFifo_wp == spi0_rxFifo_rp) && spi0_rxFifo_gb)) begin
        spi0_rx_fifo_full <= 1'b1;
    end
    else begin
        spi0_rx_fifo_full <= 1'b0;
    end
end


assign spi0_wb_wr = spi0_regFile__wb_wr;
assign spi0_wb_acc = spi0_regFile__wb_acc;


assign spi0_regFile__wb_wr = (spi0_regFile__wb_acc & wb_we);


assign spi0_regFile__wb_acc = (wb_cyc & wb_stb);
assign spi_ack = spi0_regFile__wb_ack;

always @(posedge wb_clk) begin: LBR_SDR_SPI0_REGFILE_RTL_RO_STOBES
    if (((wb_adr == (100 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_roRd[0] <= 1'b0;
        end
        else begin
            spi0_roRd[0] <= 1'b1;
        end
    end
    else begin
        spi0_roRd[0] <= 1'b0;
    end
    if (((wb_adr == (108 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_roRd[1] <= 1'b0;
        end
        else begin
            spi0_roRd[1] <= 1'b1;
        end
    end
    else begin
        spi0_roRd[1] <= 1'b0;
    end
    if (((wb_adr == (116 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_roRd[2] <= 1'b0;
        end
        else begin
            spi0_roRd[2] <= 1'b1;
        end
    end
    else begin
        spi0_roRd[2] <= 1'b0;
    end
    if (((wb_adr == (120 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_roRd[3] <= 1'b0;
        end
        else begin
            spi0_roRd[3] <= 1'b1;
        end
    end
    else begin
        spi0_roRd[3] <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_SPI0_REGFILE_RTL_WRITE_REG
    if ((!wb_rst)) begin
        spi0_rwRegisters[0] <= 128;
        spi0_rwRegisters[1] <= 0;
        spi0_rwRegisters[2] <= 0;
        spi0_rwRegisters[3] <= 0;
    end
    else begin
        if ((spi0_regFile__wb_wr && spi0_regFile__wb_sel)) begin
            if ((wb_adr == 96)) begin
                spi0_rwRegisters[0] <= wb_dat_o;
            end
            else begin
                if ((wb_adr == 104)) begin
                    spi0_rwRegisters[1] <= wb_dat_o;
                end
                else begin
                    if ((wb_adr == 112)) begin
                        spi0_rwRegisters[2] <= wb_dat_o;
                    end
                    else begin
                        if ((wb_adr == 124)) begin
                            spi0_rwRegisters[3] <= wb_dat_o;
                        end
                    end
                end
            end
        end
    end
end

always @(spi0_regFile__wb_sel, spi0_regFile__wb_do) begin: LBR_SDR_SPI0_REGFILE_RTL_READ
    if (spi0_regFile__wb_sel) begin
        spi_dat_i <= spi0_regFile__wb_do;
    end
    else begin
        spi_dat_i <= 0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_SPI0_REGFILE_RTL_READ_REG
    if ((wb_adr == (96 + 512))) begin
        spi0_regFile__wb_do <= spi0_rwRegisters[0];
    end
    else begin
        if ((wb_adr == (104 + 512))) begin
            spi0_regFile__wb_do <= spi0_rwRegisters[1];
        end
        else begin
            if ((wb_adr == (112 + 512))) begin
                spi0_regFile__wb_do <= spi0_rwRegisters[2];
            end
            else begin
                if ((wb_adr == (124 + 512))) begin
                    spi0_regFile__wb_do <= spi0_rwRegisters[3];
                end
                else begin
                    if ((wb_adr == (100 + 512))) begin
                        spi0_regFile__wb_do <= spi0_roRegisters[0];
                    end
                    else begin
                        if ((wb_adr == (108 + 512))) begin
                            spi0_regFile__wb_do <= spi0_roRegisters[1];
                        end
                        else begin
                            if ((wb_adr == (116 + 512))) begin
                                spi0_regFile__wb_do <= spi0_roRegisters[2];
                            end
                            else begin
                                if ((wb_adr == (120 + 512))) begin
                                    spi0_regFile__wb_do <= spi0_roRegisters[3];
                                end
                                else begin
                                    spi0_regFile__wb_do <= 0;
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_SPI0_REGFILE_RTL_SELECTED
    if (((wb_adr > 96) && (wb_adr < 124))) begin
        spi0_regFile__wb_sel <= 1'b1;
    end
    else begin
        spi0_regFile__wb_sel <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_SPI0_REGFILE_RTL_RW_STOBES
    if (((wb_adr == (96 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_rwWr[0] <= 1'b1;
            spi0_rwRd[0] <= 1'b0;
        end
        else begin
            spi0_rwWr[0] <= 1'b0;
            spi0_rwRd[0] <= 1'b1;
        end
    end
    else begin
        spi0_rwWr[0] <= 1'b0;
        spi0_rwRd[0] <= 1'b0;
    end
    if (((wb_adr == (104 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_rwWr[1] <= 1'b1;
            spi0_rwRd[1] <= 1'b0;
        end
        else begin
            spi0_rwWr[1] <= 1'b0;
            spi0_rwRd[1] <= 1'b1;
        end
    end
    else begin
        spi0_rwWr[1] <= 1'b0;
        spi0_rwRd[1] <= 1'b0;
    end
    if (((wb_adr == (112 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_rwWr[2] <= 1'b1;
            spi0_rwRd[2] <= 1'b0;
        end
        else begin
            spi0_rwWr[2] <= 1'b0;
            spi0_rwRd[2] <= 1'b1;
        end
    end
    else begin
        spi0_rwWr[2] <= 1'b0;
        spi0_rwRd[2] <= 1'b0;
    end
    if (((wb_adr == (124 + 512)) && spi0_regFile__wb_ack)) begin
        if (spi0_regFile__wb_wr) begin
            spi0_rwWr[3] <= 1'b1;
            spi0_rwRd[3] <= 1'b0;
        end
        else begin
            spi0_rwWr[3] <= 1'b0;
            spi0_rwRd[3] <= 1'b1;
        end
    end
    else begin
        spi0_rwWr[3] <= 1'b0;
        spi0_rwRd[3] <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_SPI0_REGFILE_RTL_ACK
    if ((!wb_rst)) begin
        spi0_regFile__wb_ack <= 1'b0;
    end
    else begin
        spi0_regFile__wb_ack <= (spi0_regFile__wb_acc & (~spi0_regFile__wb_ack));
    end
end

always @(fifo_empty, spi0_rx_fifo_full, spi0_tx_fifo_empty, spi0_roRd[0], spi0_roRd[1], spi0_roRd[2], spi0_roRd[3], fifo_full, spi0_treg, spi0__fifo_wr, spi0_cr_wb_sel, spi0_rwWr[0], spi0_rwWr[1], spi0_rwWr[2], spi0_rwWr[3], spi0_tx_fifo_do, fifo_do, spi0__fifo_rd) begin: LBR_SDR_SPI0_RTL_FIFO_SEL
    if (spi0_cr_wb_sel) begin
        spi0__fifo_empty <= spi0_tx_fifo_empty;
        spi0__fifo_full <= spi0_rx_fifo_full;
        spi0__fifo_do <= spi0_tx_fifo_do;
        spi0_tx_fifo_rd <= spi0__fifo_rd;
        spi0_rx_fifo_wr <= spi0__fifo_wr;
        spi0_rx_fifo_di <= spi0_treg;
        spi0_tx_fifo_wr <= spi0_rwWr[1];
        spi0_rx_fifo_rd <= spi0_roRd[1];
        fifo_rd_spi <= 1'b0;
        fifo_wr_spi <= 1'b0;
        fifo_di_spi <= 0;
    end
    else begin
        spi0__fifo_empty <= fifo_empty;
        spi0__fifo_full <= fifo_full;
        spi0__fifo_do <= fifo_do;
        spi0_tx_fifo_rd <= 1'b0;
        spi0_rx_fifo_wr <= 1'b0;
        spi0_rx_fifo_di <= 0;
        spi0_tx_fifo_wr <= 1'b0;
        spi0_rx_fifo_rd <= 1'b0;
        fifo_rd_spi <= spi0__fifo_rd;
        fifo_wr_spi <= spi0__fifo_wr;
        fifo_di_spi <= spi0_treg;
    end
end


assign spi0_tx_fifo_di = spi0_SPTX;
assign spi0_SPRX = spi0_rx_fifo_do;


assign gpio0_wb_wr = (gpio0_wb_acc & wb_we);
assign gpio0_mask = 255;

always @(posedge wb_clk) begin: LBR_SDR_GPIO0_RTL_WISHBONE_DATA_ADDR
    if ((wb_adr == (256 + 1))) begin
        g0_dat_i <= gpio0_llgpio;
    end
    else begin
        if ((wb_adr == 256)) begin
            g0_dat_i <= gpio0_ctrl;
        end
        else begin
            g0_dat_i <= 0;
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_GPIO0_RTL_WISHBONE_REGISTERS
    if ((!wb_rst)) begin
        gpio0_ctrl <= 255;
        gpio0_line <= 0;
    end
    else begin
        if (gpio0_wb_wr) begin
            if ((wb_adr == (256 + 1))) begin
                gpio0_line <= wb_dat_o;
            end
            else begin
                if ((wb_adr == 256)) begin
                    gpio0_ctrl <= wb_dat_o;
                end
            end
        end
    end
end

always @(gpio0__gpio_i, gpio0_line, gpio0_mask, gpio0_ctrl) begin: LBR_SDR_GPIO0_RTL_GPIO_SELECT
    integer n;
    for (n=0; n<8; n=n+1) begin
        if ((gpio0_ctrl[n] | gpio0_mask[n])) begin
            gpio0_lgpio[n] <= gpio0_line[n];
            gpio0__gpio_o[n] <= gpio0_line[n];
            gpio0__gpio_t[n] <= 0;
        end
        else begin
            gpio0_lgpio[n] <= gpio0__gpio_i[n];
            gpio0__gpio_o[n] <= 0;
            gpio0__gpio_t[n] <= 1;
        end
    end
end


assign led_sel = gpio0__gpio_o;

always @(posedge wb_clk) begin: LBR_SDR_GPIO0_RTL_WISHBONE_ACK
    if ((!wb_rst)) begin
        g0_ack <= 1'b0;
    end
    else begin
        g0_ack <= (gpio0_wb_acc & (~g0_ack));
    end
end

always @(posedge wb_clk) begin: LBR_SDR_GPIO0_RTL_GPIO_REGISTER_INPUT
    gpio0_llgpio <= gpio0_lgpio;
end


assign gpio0_wb_acc = (wb_cyc & wb_stb);


assign gpio1_wb_wr = (gpio1_wb_acc & wb_we);
assign gpio1_mask = 255;

always @(posedge wb_clk) begin: LBR_SDR_GPIO1_RTL_WISHBONE_DATA_ADDR
    if ((wb_adr == (258 + 1))) begin
        g1_dat_i <= gpio1_llgpio;
    end
    else begin
        if ((wb_adr == 258)) begin
            g1_dat_i <= gpio1_ctrl;
        end
        else begin
            g1_dat_i <= 0;
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_GPIO1_RTL_WISHBONE_REGISTERS
    if ((!wb_rst)) begin
        gpio1_ctrl <= 255;
        gpio1_line <= 0;
    end
    else begin
        if (gpio1_wb_wr) begin
            if ((wb_adr == (258 + 1))) begin
                gpio1_line <= wb_dat_o;
            end
            else begin
                if ((wb_adr == 258)) begin
                    gpio1_ctrl <= wb_dat_o;
                end
            end
        end
    end
end

always @(gpio1__gpio_i, gpio1_line, gpio1_mask, gpio1_ctrl) begin: LBR_SDR_GPIO1_RTL_GPIO_SELECT
    integer n;
    for (n=0; n<8; n=n+1) begin
        if ((gpio1_ctrl[n] | gpio1_mask[n])) begin
            gpio1_lgpio[n] <= gpio1_line[n];
            gpio1__gpio_o[n] <= gpio1_line[n];
            gpio1__gpio_t[n] <= 0;
        end
        else begin
            gpio1_lgpio[n] <= gpio1__gpio_i[n];
            gpio1__gpio_o[n] <= 0;
            gpio1__gpio_t[n] <= 1;
        end
    end
end


assign led_gpio = gpio1__gpio_o;

always @(posedge wb_clk) begin: LBR_SDR_GPIO1_RTL_WISHBONE_ACK
    if ((!wb_rst)) begin
        g1_ack <= 1'b0;
    end
    else begin
        g1_ack <= (gpio1_wb_acc & (~g1_ack));
    end
end

always @(posedge wb_clk) begin: LBR_SDR_GPIO1_RTL_GPIO_REGISTER_INPUT
    gpio1_llgpio <= gpio1_lgpio;
end


assign gpio1_wb_acc = (wb_cyc & wb_stb);

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_TXFIFO_RTL_GUARD_BIT
    if (wb_clk) begin
        twi0_txFifo_gb <= 1'b0;
    end
    else begin
        if (twi0_ctr_txrst) begin
            twi0_txFifo_gb <= 1'b0;
        end
        else begin
            if (((twi0_txFifo_wp_p1 == twi0_txFifo_rp) && twi0_tx_fifo_wr)) begin
                twi0_txFifo_gb <= 1'b1;
            end
            else begin
                if (twi0_tx_fifo_rd) begin
                    twi0_txFifo_gb <= 1'b0;
                end
            end
        end
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_TXFIFO_RTL_WP_REG
    if (wb_clk) begin
        twi0_txFifo_wp <= 0;
    end
    else begin
        if (twi0_ctr_txrst) begin
            twi0_txFifo_wp <= 0;
        end
        else begin
            twi0_txFifo_wp <= twi0_txFifo_wp_p1;
        end
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_TXFIFO_RTL_RP_REG
    if (wb_clk) begin
        twi0_txFifo_rp <= 0;
    end
    else begin
        if (twi0_ctr_txrst) begin
            twi0_txFifo_rp <= 0;
        end
        else begin
            if (twi0_tx_fifo_rd) begin
                twi0_txFifo_rp <= twi0_txFifo_rp_p1;
            end
        end
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_TXFIFO_RTL_MEM
    if (twi0_tx_fifo_wr) begin
        twi0_txFifo_mem[twi0_txFifo_wp] <= twi0_tx_fifo_di;
    end
end


assign twi0_txFifo_wp_p1 = ((twi0_txFifo_wp + 1) % (2 ** 3));


assign twi0_tx_fifo_do = twi0_txFifo_mem[twi0_txFifo_rp];


assign twi0_txFifo_rp_p1 = ((twi0_txFifo_rp + 1) % (2 ** 3));

always @(twi0_txFifo_rp, twi0_txFifo_gb, twi0_txFifo_wp) begin: LBR_SDR_TWI0_TXFIFO_RTL_ASSIGNMENTS
    if (((twi0_txFifo_wp == twi0_txFifo_rp) && (!twi0_txFifo_gb))) begin
        twi0_tx_fifo_empty <= 1'b1;
    end
    else begin
        twi0_tx_fifo_empty <= 1'b0;
    end
    if (((twi0_txFifo_wp == twi0_txFifo_rp) && twi0_txFifo_gb)) begin
        twi0_tx_fifo_full <= 1'b1;
    end
    else begin
        twi0_tx_fifo_full <= 1'b0;
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_RXFIFO_RTL_GUARD_BIT
    if (wb_clk) begin
        twi0_rxFifo_gb <= 1'b0;
    end
    else begin
        if (twi0_ctr_rxrst) begin
            twi0_rxFifo_gb <= 1'b0;
        end
        else begin
            if (((twi0_rxFifo_wp_p1 == twi0_rxFifo_rp) && twi0_rx_fifo_wr)) begin
                twi0_rxFifo_gb <= 1'b1;
            end
            else begin
                if (twi0_rx_fifo_rd) begin
                    twi0_rxFifo_gb <= 1'b0;
                end
            end
        end
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_RXFIFO_RTL_WP_REG
    if (wb_clk) begin
        twi0_rxFifo_wp <= 0;
    end
    else begin
        if (twi0_ctr_rxrst) begin
            twi0_rxFifo_wp <= 0;
        end
        else begin
            twi0_rxFifo_wp <= twi0_rxFifo_wp_p1;
        end
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_RXFIFO_RTL_RP_REG
    if (wb_clk) begin
        twi0_rxFifo_rp <= 0;
    end
    else begin
        if (twi0_ctr_rxrst) begin
            twi0_rxFifo_rp <= 0;
        end
        else begin
            if (twi0_rx_fifo_rd) begin
                twi0_rxFifo_rp <= twi0_rxFifo_rp_p1;
            end
        end
    end
end

always @(posedge twi0_reset) begin: LBR_SDR_TWI0_RXFIFO_RTL_MEM
    if (twi0_rx_fifo_wr) begin
        twi0_rxFifo_mem[twi0_rxFifo_wp] <= twi0_rx_fifo_di;
    end
end


assign twi0_rxFifo_wp_p1 = ((twi0_rxFifo_wp + 1) % (2 ** 3));


assign twi0_rx_fifo_do = twi0_rxFifo_mem[twi0_rxFifo_rp];


assign twi0_rxFifo_rp_p1 = ((twi0_rxFifo_rp + 1) % (2 ** 3));

always @(twi0_rxFifo_rp, twi0_rxFifo_gb, twi0_rxFifo_wp) begin: LBR_SDR_TWI0_RXFIFO_RTL_ASSIGNMENTS
    if (((twi0_rxFifo_wp == twi0_rxFifo_rp) && (!twi0_rxFifo_gb))) begin
        twi0_rx_fifo_empty <= 1'b1;
    end
    else begin
        twi0_rx_fifo_empty <= 1'b0;
    end
    if (((twi0_rxFifo_wp == twi0_rxFifo_rp) && twi0_rxFifo_gb)) begin
        twi0_rx_fifo_full <= 1'b1;
    end
    else begin
        twi0_rx_fifo_full <= 1'b0;
    end
end


assign twi0_PRERhi = twi0_rwRegisters[0];
assign twi0_PRERlo = twi0_rwRegisters[1];
assign twi0_CTR = twi0_rwRegisters[2];
assign twi0_TXR = twi0_rwRegisters[3];
assign twi0_CR = twi0_rwRegisters[4];
assign twi0_roRegisters[0] = twi0_RXR;
assign twi0_roRegisters[1] = twi0_SR;


assign twi0_wb_wr = twi0_regFile__wb_wr;
assign twi0_wb_acc = twi0_regFile__wb_acc;


assign twi0_regFile__wb_wr = (twi0_regFile__wb_acc & wb_we);


assign twi0_regFile__wb_acc = (wb_cyc & wb_stb);
assign twi_ack = twi0_regFile__wb_ack;

always @(posedge wb_clk) begin: LBR_SDR_TWI0_REGFILE_RTL_RO_STOBES
    if (((wb_adr == (4 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_roRd[0] <= 1'b0;
        end
        else begin
            twi0_roRd[0] <= 1'b1;
        end
    end
    else begin
        twi0_roRd[0] <= 1'b0;
    end
    if (((wb_adr == (6 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_roRd[1] <= 1'b0;
        end
        else begin
            twi0_roRd[1] <= 1'b1;
        end
    end
    else begin
        twi0_roRd[1] <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_TWI0_REGFILE_RTL_WRITE_REG
    if ((!wb_rst)) begin
        twi0_rwRegisters[0] <= 0;
        twi0_rwRegisters[1] <= 0;
        twi0_rwRegisters[2] <= 0;
        twi0_rwRegisters[3] <= 0;
        twi0_rwRegisters[4] <= 0;
    end
    else begin
        if ((twi0_regFile__wb_wr && twi0_regFile__wb_sel)) begin
            if ((wb_adr == 0)) begin
                twi0_rwRegisters[0] <= wb_dat_o;
            end
            else begin
                if ((wb_adr == 1)) begin
                    twi0_rwRegisters[1] <= wb_dat_o;
                end
                else begin
                    if ((wb_adr == 2)) begin
                        twi0_rwRegisters[2] <= wb_dat_o;
                    end
                    else begin
                        if ((wb_adr == 3)) begin
                            twi0_rwRegisters[3] <= wb_dat_o;
                        end
                        else begin
                            if ((wb_adr == 5)) begin
                                twi0_rwRegisters[4] <= wb_dat_o;
                            end
                        end
                    end
                end
            end
        end
    end
end

always @(twi0_regFile__wb_sel, twi0_regFile__wb_do) begin: LBR_SDR_TWI0_REGFILE_RTL_READ
    if (twi0_regFile__wb_sel) begin
        twi_dat_i <= twi0_regFile__wb_do;
    end
    else begin
        twi_dat_i <= 0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_TWI0_REGFILE_RTL_READ_REG
    if ((wb_adr == (0 + 1024))) begin
        twi0_regFile__wb_do <= twi0_rwRegisters[0];
    end
    else begin
        if ((wb_adr == (1 + 1024))) begin
            twi0_regFile__wb_do <= twi0_rwRegisters[1];
        end
        else begin
            if ((wb_adr == (2 + 1024))) begin
                twi0_regFile__wb_do <= twi0_rwRegisters[2];
            end
            else begin
                if ((wb_adr == (3 + 1024))) begin
                    twi0_regFile__wb_do <= twi0_rwRegisters[3];
                end
                else begin
                    if ((wb_adr == (5 + 1024))) begin
                        twi0_regFile__wb_do <= twi0_rwRegisters[4];
                    end
                    else begin
                        if ((wb_adr == (4 + 1024))) begin
                            twi0_regFile__wb_do <= twi0_roRegisters[0];
                        end
                        else begin
                            if ((wb_adr == (6 + 1024))) begin
                                twi0_regFile__wb_do <= twi0_roRegisters[1];
                            end
                            else begin
                                twi0_regFile__wb_do <= 0;
                            end
                        end
                    end
                end
            end
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_TWI0_REGFILE_RTL_SELECTED
    if (((wb_adr > 0) && (wb_adr < 6))) begin
        twi0_regFile__wb_sel <= 1'b1;
    end
    else begin
        twi0_regFile__wb_sel <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_TWI0_REGFILE_RTL_RW_STOBES
    if (((wb_adr == (0 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_rwWr[0] <= 1'b1;
            twi0_rwRd[0] <= 1'b0;
        end
        else begin
            twi0_rwWr[0] <= 1'b0;
            twi0_rwRd[0] <= 1'b1;
        end
    end
    else begin
        twi0_rwWr[0] <= 1'b0;
        twi0_rwRd[0] <= 1'b0;
    end
    if (((wb_adr == (1 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_rwWr[1] <= 1'b1;
            twi0_rwRd[1] <= 1'b0;
        end
        else begin
            twi0_rwWr[1] <= 1'b0;
            twi0_rwRd[1] <= 1'b1;
        end
    end
    else begin
        twi0_rwWr[1] <= 1'b0;
        twi0_rwRd[1] <= 1'b0;
    end
    if (((wb_adr == (2 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_rwWr[2] <= 1'b1;
            twi0_rwRd[2] <= 1'b0;
        end
        else begin
            twi0_rwWr[2] <= 1'b0;
            twi0_rwRd[2] <= 1'b1;
        end
    end
    else begin
        twi0_rwWr[2] <= 1'b0;
        twi0_rwRd[2] <= 1'b0;
    end
    if (((wb_adr == (3 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_rwWr[3] <= 1'b1;
            twi0_rwRd[3] <= 1'b0;
        end
        else begin
            twi0_rwWr[3] <= 1'b0;
            twi0_rwRd[3] <= 1'b1;
        end
    end
    else begin
        twi0_rwWr[3] <= 1'b0;
        twi0_rwRd[3] <= 1'b0;
    end
    if (((wb_adr == (5 + 1024)) && twi0_regFile__wb_ack)) begin
        if (twi0_regFile__wb_wr) begin
            twi0_rwWr[4] <= 1'b1;
            twi0_rwRd[4] <= 1'b0;
        end
        else begin
            twi0_rwWr[4] <= 1'b0;
            twi0_rwRd[4] <= 1'b1;
        end
    end
    else begin
        twi0_rwWr[4] <= 1'b0;
        twi0_rwRd[4] <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_TWI0_REGFILE_RTL_ACK
    if ((!wb_rst)) begin
        twi0_regFile__wb_ack <= 1'b0;
    end
    else begin
        twi0_regFile__wb_ack <= (twi0_regFile__wb_acc & (~twi0_regFile__wb_ack));
    end
end


assign twi0_ctr_rxrst = twi0_CTR[3];
assign twi0_ctr_txrst = twi0_CTR[4];


assign pcm0_enable = pcm0_CFG[0];
assign pcm0_rmpLch = pcm0_CFG[1];
assign pcm0_rmpRch = pcm0_CFG[2];
assign NRST = pcm0_EXT[0];
assign EN4V = pcm0_EXT[7];
assign pcm0_reset = (~wb_rst);
assign fifo_rd_pcm = 1'b0;

always @(posedge wb_clk) begin: LBR_SDR_PCM0_RTL_FORMAT_DATA
    if (pcm0_rmpLch) begin
        pcm0_rmpChanL <= ((pcm0_rmpChanL + 1) % (2 ** 24));
        pcm0_adc_buf[0] <= pcm0_rmpChanL[8-1:0];
        pcm0_adc_buf[1] <= pcm0_rmpChanL[16-1:8];
        pcm0_adc_buf[2] <= pcm0_rmpChanL[24-1:16];
    end
    else begin
        pcm0_adc_buf[0] <= pcm0_ChanL[8-1:0];
        pcm0_adc_buf[1] <= pcm0_ChanL[16-1:8];
        pcm0_adc_buf[2] <= pcm0_ChanL[24-1:16];
    end
    if (pcm0_rmpRch) begin
        pcm0_rmpChanR <= ((pcm0_rmpChanR + 1) % (2 ** 24));
        pcm0_adc_buf[3] <= pcm0_rmpChanR[8-1:0];
        pcm0_adc_buf[4] <= pcm0_rmpChanR[16-1:8];
        pcm0_adc_buf[5] <= pcm0_rmpChanR[24-1:16];
    end
    else begin
        pcm0_adc_buf[3] <= pcm0_ChanR[8-1:0];
        pcm0_adc_buf[4] <= pcm0_ChanR[16-1:8];
        pcm0_adc_buf[5] <= pcm0_ChanR[24-1:16];
    end
end

always @(posedge wb_clk) begin: LBR_SDR_PCM0_PCM4220_RTL_DATA
    if (pcm0_reset) begin
        pcm0_ChanL <= 0;
        pcm0_ChanR <= 0;
        pcm0_pcm4220_tmpL <= 0;
        pcm0_pcm4220_tmpR <= 0;
        pcm0_pcm4220_BitCnt <= 0;
    end
    else begin
        if (pcm0_pcm4220_neg_sclk) begin
            if ((pcm0_pcm4220_BitCnt < 24)) begin
                pcm0_pcm4220_BitCnt <= (pcm0_pcm4220_BitCnt + 1);
                if (LR) begin
                    pcm0_pcm4220_tmpL <= {pcm0_pcm4220_tmpL[23-1:0], pcm0_sSDATA};
                end
                if ((!LR)) begin
                    pcm0_pcm4220_tmpR <= {pcm0_pcm4220_tmpL[23-1:0], pcm0_sSDATA};
                end
            end
            if (pcm0_pcm4220_pos_lr) begin
                pcm0_ChanR <= pcm0_pcm4220_tmpR;
                pcm0_pcm4220_BitCnt <= 0;
                pcm0_pcm4220_tmpL <= 0;
            end
            if (pcm0_pcm4220_neg_lr) begin
                pcm0_ChanL <= pcm0_pcm4220_tmpL;
                pcm0_pcm4220_BitCnt <= 0;
                pcm0_pcm4220_tmpR <= 0;
            end
        end
    end
end


assign pcm0_pcm4220_neg_sclk = ((~pcm0_sSCLK) & pcm0_pcm4220__sclk);
assign pcm0_pcm4220_pos_sclk = (pcm0_sSCLK & (~pcm0_pcm4220__sclk));
assign pcm0_pcm4220_neg_lr = ((~LR) & pcm0_pcm4220__lr);
assign pcm0_pcm4220_pos_lr = (LR & (~pcm0_pcm4220__lr));

always @(posedge wb_clk) begin: LBR_SDR_PCM0_PCM4220_RTL_SCK_DELAY
    pcm0_pcm4220__sclk <= pcm0_sSCLK;
    pcm0_pcm4220__lr <= LR;
end

always @(pcm0_enable, pcm0_adc_data) begin: LBR_SDR_PCM0_RTL_ENABLE
    if (pcm0_enable) begin
        fifo_di_pcm <= pcm0_adc_data;
    end
    else begin
        fifo_di_pcm <= 0;
    end
end


assign pcm0_CFG = pcm0_rwRegisters[0];
assign pcm0_EXT = pcm0_rwRegisters[1];

always @(posedge wb_clk) begin: LBR_SDR_PCM0_RTL_GET_DATA
    if (pcm0_reset) begin
        pcm0_index <= 0;
        fifo_wr_pcm <= 1'b0;
        pcm0__lr <= pcm0_sLR;
    end
    else begin
        if (pcm0_enable) begin
            pcm0__lr <= pcm0_sLR;
            if (pcm0__lr) begin
                pcm0_index <= 0;
                fifo_wr_pcm <= 1'b0;
            end
            else begin
                if ((pcm0_index < 6)) begin
                    pcm0_index <= (pcm0_index + 1);
                    fifo_wr_pcm <= 1'b1;
                end
                else begin
                    fifo_wr_pcm <= 1'b0;
                end
            end
        end
        else begin
            fifo_wr_pcm <= 1'b0;
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_PCM0_RTL_SYNCRO
    pcm0___SCLK <= SCLK;
    pcm0___SDATA <= SDATA;
    pcm0___LR <= LR;
    pcm0_sSCLK <= pcm0___SCLK;
    pcm0_sSDATA <= pcm0___SDATA;
    pcm0_sLR <= pcm0___LR;
end


assign pcm0_adc_data = pcm0_adc_buf[pcm0_index];


assign fifo_wr = (((fifo_wr_spi | fifo_wr_twi) | fifo_wr_rmp) | fifo_wr_pcm);
assign fifo_rd = (((fifo_rd_spi | fifo_rd_twi) | fifo_rd_rmp) | fifo_rd_pcm);
assign fifo_di = (((fifo_di_spi | fifo_di_twi) | fifo_di_rmp) | fifo_di_pcm);


assign wb_clk = IFCLK;
assign wb_rst = (!fifo_intf_ireset);
assign wb_adr = fifo_intf_wb_controller_wb_addr;
assign wb_dat_o = fifo_intf_wb_controller_wb_dat;
assign fifo_intf_wb_controller_i_dat_i = (wb_dat_i | fifo_intf_wb_controller_cs_dat_i);
assign fifo_intf_wb_fifo_rd = (fifo_intf_wb_controller_fifo_rd & (~fifo_intf_wb_fifo_empty));


assign fifo_intf_wb_controller_wb_addr = (fifo_intf_wb_controller_wb_cmd_wb_iaddr + fifo_intf_wb_controller_wb_cmd_wb_cnt);


assign fifo_intf_wb_controller_wb_dat = fifo_intf_wb_fifo_do;

always @(fifo_intf_wb_controller_wb_cmd_reg_sel) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_WB_CMD_RTL_GO
    if ((fifo_intf_wb_controller_wb_cmd_reg_sel >= 7)) begin
        fifo_intf_wb_controller_wb_go <= 1'b1;
    end
    else begin
        fifo_intf_wb_controller_wb_go <= 1'b0;
    end
end

always @(fifo_intf_wb_controller_wb_cmd_reg_sel, fifo_intf_wb_controller_wb_cmd_wb_cmd) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_WB_CMD_RTL_CONTROL
    if (((fifo_intf_wb_controller_wb_cmd_wb_cmd == 1) && (fifo_intf_wb_controller_wb_cmd_reg_sel >= 8))) begin
        fifo_intf_wb_controller_wb_wr <= 1'b1;
    end
    else begin
        fifo_intf_wb_controller_wb_wr <= 1'b0;
    end
    if (((fifo_intf_wb_controller_wb_cmd_wb_cmd == 2) && (fifo_intf_wb_controller_wb_cmd_reg_sel >= 7))) begin
        fifo_intf_wb_controller_wb_rd <= 1'b1;
    end
    else begin
        fifo_intf_wb_controller_wb_rd <= 1'b0;
    end
    if ((fifo_intf_wb_controller_wb_cmd_reg_sel > 0)) begin
        fifo_intf_wb_cmd_in_prog <= 1'b1;
    end
    else begin
        fifo_intf_wb_cmd_in_prog <= 1'b0;
    end
end

always @(posedge IFCLK) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_WB_CMD_RTL_MREGS
    if (fifo_intf_ireset) begin
        fifo_intf_wb_controller_wb_cmd_wb_len <= 1;
        fifo_intf_wb_controller_wb_cmd_wb_cnt <= 0;
        fifo_intf_wb_controller_wb_cmd_wb_cmd <= 0;
        fifo_intf_wb_controller_wb_cmd_sbyte0 <= 0;
        fifo_intf_wb_controller_wb_cmd_sbyte1 <= 0;
        fifo_intf_wb_controller_wb_cmd_sbyte6 <= 0;
        fifo_intf_wb_controller_wb_cmd_sbyte7 <= 0;
        fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
        fifo_intf_wb_controller_wb_cmd_wb_idat <= 0;
        fifo_intf_wb_controller_wb_cmd_addr_lo <= 0;
        fifo_intf_wb_controller_wb_cmd_addr_hi <= 0;
        fifo_intf_wb_controller_wb_cmd_wb_iaddr <= 0;
    end
    else begin
        if (fifo_intf_wb_fifo_do_vld) begin
            if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 0)) begin
                fifo_intf_wb_controller_wb_cmd_sbyte0 <= fifo_intf_wb_fifo_do;
            end
            else begin
                if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 1)) begin
                    fifo_intf_wb_controller_wb_cmd_sbyte1 <= fifo_intf_wb_fifo_do;
                end
                else begin
                    if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 2)) begin
                        fifo_intf_wb_controller_wb_cmd_wb_cmd <= fifo_intf_wb_fifo_do;
                    end
                    else begin
                        if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 3)) begin
                            fifo_intf_wb_controller_wb_cmd_addr_hi <= fifo_intf_wb_fifo_do;
                        end
                        else begin
                            if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 4)) begin
                                fifo_intf_wb_controller_wb_cmd_addr_lo <= fifo_intf_wb_fifo_do;
                            end
                            else begin
                                if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 5)) begin
                                    fifo_intf_wb_controller_wb_cmd_wb_iaddr <= {fifo_intf_wb_controller_wb_cmd_addr_hi, fifo_intf_wb_controller_wb_cmd_addr_lo};
                                    if ((fifo_intf_wb_fifo_do == 0)) begin
                                        fifo_intf_wb_controller_wb_cmd_wb_len <= 1;
                                    end
                                    else begin
                                        fifo_intf_wb_controller_wb_cmd_wb_len <= fifo_intf_wb_fifo_do;
                                    end
                                end
                                else begin
                                    if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 6)) begin
                                        fifo_intf_wb_controller_wb_cmd_sbyte6 <= fifo_intf_wb_fifo_do;
                                    end
                                    else begin
                                        if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 7)) begin
                                            fifo_intf_wb_controller_wb_cmd_sbyte7 <= fifo_intf_wb_fifo_do;
                                        end
                                        else begin
                                            if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 8)) begin
                                                fifo_intf_wb_controller_wb_cmd_wb_idat <= fifo_intf_wb_fifo_do;
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 8)) begin
                if ((fifo_intf_wb_controller_wb_cmd_wb_cnt >= (fifo_intf_wb_controller_wb_cmd_wb_len - 1))) begin
                    fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                    fifo_intf_wb_controller_wb_cmd_wb_cnt <= 0;
                end
                else begin
                    fifo_intf_wb_controller_wb_cmd_wb_cnt <= (fifo_intf_wb_controller_wb_cmd_wb_cnt + 1);
                end
            end
            else begin
                if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 0)) begin
                    if ((fifo_intf_wb_fifo_do == 222)) begin
                        fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                    end
                    else begin
                        fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                    end
                end
                else begin
                    if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 1)) begin
                        if ((fifo_intf_wb_fifo_do == 202)) begin
                            fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                        end
                        else begin
                            fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                        end
                    end
                    else begin
                        if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 2)) begin
                            if (((fifo_intf_wb_fifo_do > 0) && (fifo_intf_wb_fifo_do < 3))) begin
                                fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                            end
                            else begin
                                fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                            end
                        end
                        else begin
                            if (((fifo_intf_wb_controller_wb_cmd_reg_sel == 3) || (fifo_intf_wb_controller_wb_cmd_reg_sel == 4))) begin
                                fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                            end
                            else begin
                                if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 5)) begin
                                    fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                                end
                                else begin
                                    if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 6)) begin
                                        if ((fifo_intf_wb_fifo_do == 251)) begin
                                            fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                                        end
                                        else begin
                                            fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                                        end
                                    end
                                    else begin
                                        if ((fifo_intf_wb_controller_wb_cmd_reg_sel == 7)) begin
                                            if (((fifo_intf_wb_fifo_do != 173) || ((fifo_intf_wb_controller_wb_cmd_wb_cmd == 2) && (fifo_intf_wb_controller_wb_cmd_wb_len == 1)))) begin
                                                fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                                            end
                                            else begin
                                                fifo_intf_wb_controller_wb_cmd_reg_sel <= (fifo_intf_wb_controller_wb_cmd_reg_sel + 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (((fifo_intf_wb_controller_wb_cmd_wb_cnt >= fifo_intf_wb_controller_wb_cmd_wb_len) && (fifo_intf_wb_controller_wb_cmd_reg_sel > 5))) begin
                fifo_intf_wb_controller_wb_cmd_reg_sel <= 0;
                fifo_intf_wb_controller_wb_cmd_wb_cnt <= 0;
            end
        end
    end
end

always @(wb_ack, wb_we, fifo_intf_wb_controller_i_dat_i, fifo_intf_wb_controller_fifo_wr, fifo_intf_wb_fifo_do, fifo_intf_wb_fifo_empty, fifo_intf_wb_fifo_do_vld) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_RTL2
    if ((wb_ack && (!wb_we))) begin
        fifo_intf_wb_fifo_wr <= (fifo_intf_wb_controller_fifo_wr & (~fifo_intf_wb_fifo_empty));
        fifo_intf_wb_fifo_di <= fifo_intf_wb_controller_i_dat_i;
    end
    else begin
        fifo_intf_wb_fifo_wr <= ((fifo_intf_wb_controller_fifo_wr & (~fifo_intf_wb_fifo_empty)) & fifo_intf_wb_fifo_do_vld);
        fifo_intf_wb_fifo_di <= fifo_intf_wb_fifo_do;
    end
end

always @(fifo_intf_wb_controller_wb_addr, fifo_intf_wb_controller_wb_ctrl0) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_RTL6
    if ((fifo_intf_wb_controller_wb_addr == 0)) begin
        fifo_intf_wb_controller_cs_dat_i <= fifo_intf_wb_controller_wb_ctrl0;
    end
    else begin
        fifo_intf_wb_controller_cs_dat_i <= 0;
    end
    loopback <= fifo_intf_wb_controller_wb_ctrl0[0];
end

always @(fifo_intf_wb_controller_wb_addr, fifo_intf_wb_controller_wb_go, fifo_intf_wb_controller_wb_wr, fifo_intf_wb_controller_wb_rd) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_RTL4
    if ((fifo_intf_wb_controller_wb_go && (fifo_intf_wb_controller_wb_wr || fifo_intf_wb_controller_wb_rd))) begin
        wb_cyc <= 1'b1;
        wb_lock <= 1'b0;
        wb_stb <= 1'b1;
        wb_we <= fifo_intf_wb_controller_wb_wr;
    end
    else begin
        wb_cyc <= 1'b0;
        wb_lock <= 1'b0;
        wb_stb <= 1'b0;
        wb_we <= 1'b0;
    end
    if ((fifo_intf_wb_controller_wb_addr[1-1:0] == 0)) begin
        wb_sel <= 1;
    end
    else begin
        if ((fifo_intf_wb_controller_wb_addr[1-1:0] == 1)) begin
            wb_sel <= 2;
        end
        else begin
            if ((fifo_intf_wb_controller_wb_addr[1-1:0] == 2)) begin
                wb_sel <= 4;
            end
            else begin
                if ((fifo_intf_wb_controller_wb_addr[1-1:0] == 3)) begin
                    wb_sel <= 8;
                end
            end
        end
    end
end

always @(posedge IFCLK) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_RTL5
    if (fifo_intf_ireset) begin
        fifo_intf_wb_controller_wb_ctrl0 <= 0;
    end
    else begin
        if (((fifo_intf_wb_controller_wb_addr == 0) && wb_we)) begin
            fifo_intf_wb_controller_wb_ctrl0 <= wb_dat_o;
        end
    end
end

always @(posedge IFCLK) begin: LBR_SDR_FIFO_INTF_WB_CONTROLLER_RTL3
    if (fifo_intf_ireset) begin
        fifo_intf_wb_controller_fifo_wr <= 1'b0;
        fifo_intf_wb_controller_fifo_rd <= 1'b0;
    end
    else begin
        if ((FLAGA && (!fifo_intf_wb_fifo_empty) && (!fifo_intf_wb_fifo_full))) begin
            if ((!fifo_intf_wb_controller_wb_go)) begin
                fifo_intf_wb_controller_fifo_rd <= 1'b1;
                fifo_intf_wb_controller_fifo_wr <= 1'b1;
            end
            else begin
                if ((fifo_intf_wb_controller_wb_go && wb_stb)) begin
                    fifo_intf_wb_controller_fifo_rd <= 1'b1;
                    fifo_intf_wb_controller_fifo_wr <= 1'b1;
                end
            end
        end
        else begin
            fifo_intf_wb_controller_fifo_rd <= 1'b0;
            fifo_intf_wb_controller_fifo_wr <= 1'b0;
        end
    end
end

always @(fifo_intf_i_fifo_rd, fifo_intf_ex_fifo_fifoA__rptr_d, fifo_intf_ex_fifo_fifoA__rptr_c) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_RD_POINTER
    if (fifo_intf_i_fifo_rd) begin
        fifo_intf_ex_fifo_fifoA_rptr <= fifo_intf_ex_fifo_fifoA__rptr_c;
    end
    else begin
        fifo_intf_ex_fifo_fifoA_rptr <= fifo_intf_ex_fifo_fifoA__rptr_d;
    end
end


assign fifo_intf_ex_fifo_fifoA_wptr_p1 = ((fifo_intf_ex_fifo_fifoA_wptr + 1) % (2 ** 10));
assign fifo_intf_ex_fifo_fifoA_wptr_p2 = ((fifo_intf_ex_fifo_fifoA_wptr + 2) % (2 ** 10));

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_WR
    if (fifo_intf_ireset) begin
        fifo_intf_ex_fifo_fifoA_wptr <= 0;
    end
    else begin
        if ((fifo_intf_fx2_fifo_wr && (fifo_intf_ex_fifo_fifoA_wptr_p1 != fifo_intf_ex_fifo_fifoA_rptr))) begin
            fifo_intf_ex_fifo_fifoA_wptr <= ((fifo_intf_ex_fifo_fifoA_wptr + 1) % (2 ** 10));
        end
        else begin
            if ((fifo_intf_fx2_fifo_wr && (fifo_intf_ex_fifo_fifoA_wptr_p1 == fifo_intf_ex_fifo_fifoA_rptr))) begin
                $write("SYNC FIFO DATA DROPPED");
                $write("\n");
            end
        end
    end
end


assign fifo_intf_i_fifo_do = fifo_intf_ex_fifo_fifoA_dout_mem;
assign fifo_intf_ex_fifo_fifoA_din_mem = fifo_intf_fx2_fifo_do;
assign fifo_intf_i_fifo_do_vld = (fifo_intf_ex_fifo_fifoA__vld & fifo_intf_i_fifo_rd);

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_FMEM_RD_RTL
    fifo_intf_ex_fifo_fifoA_fmem__dout <= fifo_intf_ex_fifo_fifoA_fmem_mem[fifo_intf_ex_fifo_fifoA_rptr];
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_FMEM_WR_RTL
    fifo_intf_ex_fifo_fifoA_fmem__wr <= fifo_intf_fx2_fifo_wr;
    fifo_intf_ex_fifo_fifoA_fmem__addr_w <= fifo_intf_ex_fifo_fifoA_wptr;
    fifo_intf_ex_fifo_fifoA_fmem__din <= fifo_intf_ex_fifo_fifoA_din_mem;
    if (fifo_intf_ex_fifo_fifoA_fmem__wr) begin
        fifo_intf_ex_fifo_fifoA_fmem_mem[fifo_intf_ex_fifo_fifoA_fmem__addr_w] <= fifo_intf_ex_fifo_fifoA_fmem__din;
    end
end


assign fifo_intf_ex_fifo_fifoA_dout_mem = fifo_intf_ex_fifo_fifoA_fmem__dout;

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_AE
    if ((((fifo_intf_ex_fifo_fifoA_rptr + 1) == fifo_intf_ex_fifo_fifoA_wptr) || fifo_intf_i_fifo_empty)) begin
        fifo_intf_ex_fifo_aemptya <= 1'b1;
    end
    else begin
        fifo_intf_ex_fifo_aemptya <= 1'b0;
    end
end

always @(fifo_intf_ex_fifo_fifoA_wptr_p2, fifo_intf_ex_fifo_fifoA_rptr, fifo_intf_ex_fifo_nfulla) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_AF
    if (((fifo_intf_ex_fifo_fifoA_wptr_p2 == fifo_intf_ex_fifo_fifoA_rptr) || fifo_intf_ex_fifo_nfulla)) begin
        fifo_intf_fx2_fifo_full <= 1'b1;
    end
    else begin
        fifo_intf_fx2_fifo_full <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_D_RD
    fifo_intf_ex_fifo_fifoA__rd <= fifo_intf_i_fifo_rd;
    fifo_intf_ex_fifo_fifoA__rptr_d <= fifo_intf_ex_fifo_fifoA_rptr;
end

always @(fifo_intf_ex_fifo_fifoA_wptr_p1, fifo_intf_ex_fifo_fifoA_rptr) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_F
    if ((fifo_intf_ex_fifo_fifoA_wptr_p1 == fifo_intf_ex_fifo_fifoA_rptr)) begin
        fifo_intf_ex_fifo_nfulla <= 1'b1;
    end
    else begin
        fifo_intf_ex_fifo_nfulla <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_E
    if ((fifo_intf_ex_fifo_fifoA_rptr == fifo_intf_ex_fifo_fifoA_wptr)) begin
        fifo_intf_i_fifo_empty <= 1'b1;
        fifo_intf_ex_fifo_fifoA__empty <= 0;
    end
    else begin
        if ((fifo_intf_ex_fifo_fifoA__empty == 0)) begin
            fifo_intf_ex_fifo_fifoA__empty <= 1;
        end
        else begin
            if ((fifo_intf_ex_fifo_fifoA__empty == 1)) begin
                fifo_intf_ex_fifo_fifoA__empty <= 2;
            end
            else begin
                fifo_intf_ex_fifo_fifoA__empty <= 3;
                fifo_intf_i_fifo_empty <= 1'b0;
            end
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOA_RTL_RD
    if (fifo_intf_ireset) begin
        fifo_intf_ex_fifo_fifoA__rptr_c <= 0;
        fifo_intf_ex_fifo_fifoA__vld <= 1'b0;
    end
    else begin
        if ((fifo_intf_i_fifo_rd && (fifo_intf_ex_fifo_fifoA__rptr_c != fifo_intf_ex_fifo_fifoA_wptr))) begin
            fifo_intf_ex_fifo_fifoA__rptr_c <= ((fifo_intf_ex_fifo_fifoA__rptr_c + 1) % (2 ** 10));
            fifo_intf_ex_fifo_fifoA__vld <= 1'b1;
        end
        else begin
            fifo_intf_ex_fifo_fifoA__vld <= 1'b0;
        end
        if (((!fifo_intf_i_fifo_rd) && fifo_intf_ex_fifo_fifoA__rd)) begin
            fifo_intf_ex_fifo_fifoA__rptr_c <= fifo_intf_ex_fifo_fifoA__rptr_d;
        end
    end
end

always @(fifo_intf_fx2_fifo_rd, fifo_intf_ex_fifo_fifoB__rptr_d, fifo_intf_ex_fifo_fifoB__rptr_c) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_RD_POINTER
    if (fifo_intf_fx2_fifo_rd) begin
        fifo_intf_ex_fifo_fifoB_rptr <= fifo_intf_ex_fifo_fifoB__rptr_c;
    end
    else begin
        fifo_intf_ex_fifo_fifoB_rptr <= fifo_intf_ex_fifo_fifoB__rptr_d;
    end
end


assign fifo_intf_ex_fifo_fifoB_wptr_p1 = ((fifo_intf_ex_fifo_fifoB_wptr + 1) % (2 ** 10));
assign fifo_intf_ex_fifo_fifoB_wptr_p2 = ((fifo_intf_ex_fifo_fifoB_wptr + 2) % (2 ** 10));

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_WR
    if (fifo_intf_ireset) begin
        fifo_intf_ex_fifo_fifoB_wptr <= 0;
    end
    else begin
        if ((fifo_intf_i_fifo_wr && (fifo_intf_ex_fifo_fifoB_wptr_p1 != fifo_intf_ex_fifo_fifoB_rptr))) begin
            fifo_intf_ex_fifo_fifoB_wptr <= ((fifo_intf_ex_fifo_fifoB_wptr + 1) % (2 ** 10));
        end
        else begin
            if ((fifo_intf_i_fifo_wr && (fifo_intf_ex_fifo_fifoB_wptr_p1 == fifo_intf_ex_fifo_fifoB_rptr))) begin
                $write("SYNC FIFO DATA DROPPED");
                $write("\n");
            end
        end
    end
end


assign fifo_intf_fx2_fifo_di = fifo_intf_ex_fifo_fifoB_dout_mem;
assign fifo_intf_ex_fifo_fifoB_din_mem = fifo_intf_i_fifo_di;
assign fifo_intf_fx2_fifo_di_vld = (fifo_intf_ex_fifo_fifoB__vld & fifo_intf_fx2_fifo_rd);

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_FMEM_RD_RTL
    fifo_intf_ex_fifo_fifoB_fmem__dout <= fifo_intf_ex_fifo_fifoB_fmem_mem[fifo_intf_ex_fifo_fifoB_rptr];
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_FMEM_WR_RTL
    fifo_intf_ex_fifo_fifoB_fmem__wr <= fifo_intf_i_fifo_wr;
    fifo_intf_ex_fifo_fifoB_fmem__addr_w <= fifo_intf_ex_fifo_fifoB_wptr;
    fifo_intf_ex_fifo_fifoB_fmem__din <= fifo_intf_ex_fifo_fifoB_din_mem;
    if (fifo_intf_ex_fifo_fifoB_fmem__wr) begin
        fifo_intf_ex_fifo_fifoB_fmem_mem[fifo_intf_ex_fifo_fifoB_fmem__addr_w] <= fifo_intf_ex_fifo_fifoB_fmem__din;
    end
end


assign fifo_intf_ex_fifo_fifoB_dout_mem = fifo_intf_ex_fifo_fifoB_fmem__dout;

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_AE
    if ((((fifo_intf_ex_fifo_fifoB_rptr + 1) == fifo_intf_ex_fifo_fifoB_wptr) || fifo_intf_fx2_fifo_empty)) begin
        fifo_intf_ex_fifo_aemptyb <= 1'b1;
    end
    else begin
        fifo_intf_ex_fifo_aemptyb <= 1'b0;
    end
end

always @(fifo_intf_ex_fifo_fifoB_wptr_p2, fifo_intf_ex_fifo_fifoB_rptr, fifo_intf_ex_fifo_nfullb) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_AF
    if (((fifo_intf_ex_fifo_fifoB_wptr_p2 == fifo_intf_ex_fifo_fifoB_rptr) || fifo_intf_ex_fifo_nfullb)) begin
        fifo_intf_i_fifo_full <= 1'b1;
    end
    else begin
        fifo_intf_i_fifo_full <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_D_RD
    fifo_intf_ex_fifo_fifoB__rd <= fifo_intf_fx2_fifo_rd;
    fifo_intf_ex_fifo_fifoB__rptr_d <= fifo_intf_ex_fifo_fifoB_rptr;
end

always @(fifo_intf_ex_fifo_fifoB_wptr_p1, fifo_intf_ex_fifo_fifoB_rptr) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_F
    if ((fifo_intf_ex_fifo_fifoB_wptr_p1 == fifo_intf_ex_fifo_fifoB_rptr)) begin
        fifo_intf_ex_fifo_nfullb <= 1'b1;
    end
    else begin
        fifo_intf_ex_fifo_nfullb <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_E
    if ((fifo_intf_ex_fifo_fifoB_rptr == fifo_intf_ex_fifo_fifoB_wptr)) begin
        fifo_intf_fx2_fifo_empty <= 1'b1;
        fifo_intf_ex_fifo_fifoB__empty <= 0;
    end
    else begin
        if ((fifo_intf_ex_fifo_fifoB__empty == 0)) begin
            fifo_intf_ex_fifo_fifoB__empty <= 1;
        end
        else begin
            if ((fifo_intf_ex_fifo_fifoB__empty == 1)) begin
                fifo_intf_ex_fifo_fifoB__empty <= 2;
            end
            else begin
                fifo_intf_ex_fifo_fifoB__empty <= 3;
                fifo_intf_fx2_fifo_empty <= 1'b0;
            end
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_EX_FIFO_FIFOB_RTL_RD
    if (fifo_intf_ireset) begin
        fifo_intf_ex_fifo_fifoB__rptr_c <= 0;
        fifo_intf_ex_fifo_fifoB__vld <= 1'b0;
    end
    else begin
        if ((fifo_intf_fx2_fifo_rd && (fifo_intf_ex_fifo_fifoB__rptr_c != fifo_intf_ex_fifo_fifoB_wptr))) begin
            fifo_intf_ex_fifo_fifoB__rptr_c <= ((fifo_intf_ex_fifo_fifoB__rptr_c + 1) % (2 ** 10));
            fifo_intf_ex_fifo_fifoB__vld <= 1'b1;
        end
        else begin
            fifo_intf_ex_fifo_fifoB__vld <= 1'b0;
        end
        if (((!fifo_intf_fx2_fifo_rd) && fifo_intf_ex_fifo_fifoB__rd)) begin
            fifo_intf_ex_fifo_fifoB__rptr_c <= fifo_intf_ex_fifo_fifoB__rptr_d;
        end
    end
end

always @(fifo_intf_wb_fifo_wr, FLAGA, fifo_intf_ireset, fifo_intf_wb_cmd_in_prog, fifo_intf_i_fifo_wr, fifo_intf_wb_fifo_empty, fifo_intf_dbg_it, fifo_intf_fx2_wb_empty) begin: LBR_SDR_FIFO_INTF_DEBUG_SIGS
    fx2_dbg[0] <= fifo_intf_ireset;
    fx2_dbg[1] <= fifo_intf_i_fifo_wr;
    fx2_dbg[2] <= FLAGA;
    fx2_dbg[3] <= fifo_intf_wb_cmd_in_prog;
    fx2_dbg[4] <= fifo_intf_fx2_wb_empty;
    fx2_dbg[5] <= fifo_intf_wb_fifo_empty;
    fx2_dbg[6] <= fifo_intf_wb_fifo_wr;
    fx2_dbg[7] <= fifo_intf_dbg_it;
end

always @(fifo_intf_wb_fifo_rd, fifo_intf_wb_fifo_fifoA__rptr_d, fifo_intf_wb_fifo_fifoA__rptr_c) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_RD_POINTER
    if (fifo_intf_wb_fifo_rd) begin
        fifo_intf_wb_fifo_fifoA_rptr <= fifo_intf_wb_fifo_fifoA__rptr_c;
    end
    else begin
        fifo_intf_wb_fifo_fifoA_rptr <= fifo_intf_wb_fifo_fifoA__rptr_d;
    end
end


assign fifo_intf_wb_fifo_fifoA_wptr_p1 = ((fifo_intf_wb_fifo_fifoA_wptr + 1) % (2 ** 9));
assign fifo_intf_wb_fifo_fifoA_wptr_p2 = ((fifo_intf_wb_fifo_fifoA_wptr + 2) % (2 ** 9));

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_WR
    if (fifo_intf_ireset) begin
        fifo_intf_wb_fifo_fifoA_wptr <= 0;
    end
    else begin
        if ((fifo_intf_fx2_wb_wr && (fifo_intf_wb_fifo_fifoA_wptr_p1 != fifo_intf_wb_fifo_fifoA_rptr))) begin
            fifo_intf_wb_fifo_fifoA_wptr <= ((fifo_intf_wb_fifo_fifoA_wptr + 1) % (2 ** 9));
        end
        else begin
            if ((fifo_intf_fx2_wb_wr && (fifo_intf_wb_fifo_fifoA_wptr_p1 == fifo_intf_wb_fifo_fifoA_rptr))) begin
                $write("SYNC FIFO DATA DROPPED");
                $write("\n");
            end
        end
    end
end


assign fifo_intf_wb_fifo_do = fifo_intf_wb_fifo_fifoA_dout_mem;
assign fifo_intf_wb_fifo_fifoA_din_mem = fifo_intf_fx2_wb_do;
assign fifo_intf_wb_fifo_do_vld = (fifo_intf_wb_fifo_fifoA__vld & fifo_intf_wb_fifo_rd);

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_FMEM_RD_RTL
    fifo_intf_wb_fifo_fifoA_fmem__dout <= fifo_intf_wb_fifo_fifoA_fmem_mem[fifo_intf_wb_fifo_fifoA_rptr];
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_FMEM_WR_RTL
    fifo_intf_wb_fifo_fifoA_fmem__wr <= fifo_intf_fx2_wb_wr;
    fifo_intf_wb_fifo_fifoA_fmem__addr_w <= fifo_intf_wb_fifo_fifoA_wptr;
    fifo_intf_wb_fifo_fifoA_fmem__din <= fifo_intf_wb_fifo_fifoA_din_mem;
    if (fifo_intf_wb_fifo_fifoA_fmem__wr) begin
        fifo_intf_wb_fifo_fifoA_fmem_mem[fifo_intf_wb_fifo_fifoA_fmem__addr_w] <= fifo_intf_wb_fifo_fifoA_fmem__din;
    end
end


assign fifo_intf_wb_fifo_fifoA_dout_mem = fifo_intf_wb_fifo_fifoA_fmem__dout;

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_AE
    if ((((fifo_intf_wb_fifo_fifoA_rptr + 1) == fifo_intf_wb_fifo_fifoA_wptr) || fifo_intf_wb_fifo_empty)) begin
        fifo_intf_wb_fifo_aemptya <= 1'b1;
    end
    else begin
        fifo_intf_wb_fifo_aemptya <= 1'b0;
    end
end

always @(fifo_intf_wb_fifo_fifoA_wptr_p2, fifo_intf_wb_fifo_fifoA_rptr, fifo_intf_wb_fifo_nfulla) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_AF
    if (((fifo_intf_wb_fifo_fifoA_wptr_p2 == fifo_intf_wb_fifo_fifoA_rptr) || fifo_intf_wb_fifo_nfulla)) begin
        fifo_intf_fx2_wb_full <= 1'b1;
    end
    else begin
        fifo_intf_fx2_wb_full <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_D_RD
    fifo_intf_wb_fifo_fifoA__rd <= fifo_intf_wb_fifo_rd;
    fifo_intf_wb_fifo_fifoA__rptr_d <= fifo_intf_wb_fifo_fifoA_rptr;
end

always @(fifo_intf_wb_fifo_fifoA_wptr_p1, fifo_intf_wb_fifo_fifoA_rptr) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_F
    if ((fifo_intf_wb_fifo_fifoA_wptr_p1 == fifo_intf_wb_fifo_fifoA_rptr)) begin
        fifo_intf_wb_fifo_nfulla <= 1'b1;
    end
    else begin
        fifo_intf_wb_fifo_nfulla <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_E
    if ((fifo_intf_wb_fifo_fifoA_rptr == fifo_intf_wb_fifo_fifoA_wptr)) begin
        fifo_intf_wb_fifo_empty <= 1'b1;
        fifo_intf_wb_fifo_fifoA__empty <= 0;
    end
    else begin
        if ((fifo_intf_wb_fifo_fifoA__empty == 0)) begin
            fifo_intf_wb_fifo_fifoA__empty <= 1;
        end
        else begin
            if ((fifo_intf_wb_fifo_fifoA__empty == 1)) begin
                fifo_intf_wb_fifo_fifoA__empty <= 2;
            end
            else begin
                fifo_intf_wb_fifo_fifoA__empty <= 3;
                fifo_intf_wb_fifo_empty <= 1'b0;
            end
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOA_RTL_RD
    if (fifo_intf_ireset) begin
        fifo_intf_wb_fifo_fifoA__rptr_c <= 0;
        fifo_intf_wb_fifo_fifoA__vld <= 1'b0;
    end
    else begin
        if ((fifo_intf_wb_fifo_rd && (fifo_intf_wb_fifo_fifoA__rptr_c != fifo_intf_wb_fifo_fifoA_wptr))) begin
            fifo_intf_wb_fifo_fifoA__rptr_c <= ((fifo_intf_wb_fifo_fifoA__rptr_c + 1) % (2 ** 9));
            fifo_intf_wb_fifo_fifoA__vld <= 1'b1;
        end
        else begin
            fifo_intf_wb_fifo_fifoA__vld <= 1'b0;
        end
        if (((!fifo_intf_wb_fifo_rd) && fifo_intf_wb_fifo_fifoA__rd)) begin
            fifo_intf_wb_fifo_fifoA__rptr_c <= fifo_intf_wb_fifo_fifoA__rptr_d;
        end
    end
end

always @(fifo_intf_fx2_wb_rd, fifo_intf_wb_fifo_fifoB__rptr_d, fifo_intf_wb_fifo_fifoB__rptr_c) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_RD_POINTER
    if (fifo_intf_fx2_wb_rd) begin
        fifo_intf_wb_fifo_fifoB_rptr <= fifo_intf_wb_fifo_fifoB__rptr_c;
    end
    else begin
        fifo_intf_wb_fifo_fifoB_rptr <= fifo_intf_wb_fifo_fifoB__rptr_d;
    end
end


assign fifo_intf_wb_fifo_fifoB_wptr_p1 = ((fifo_intf_wb_fifo_fifoB_wptr + 1) % (2 ** 9));
assign fifo_intf_wb_fifo_fifoB_wptr_p2 = ((fifo_intf_wb_fifo_fifoB_wptr + 2) % (2 ** 9));

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_WR
    if (fifo_intf_ireset) begin
        fifo_intf_wb_fifo_fifoB_wptr <= 0;
    end
    else begin
        if ((fifo_intf_wb_fifo_wr && (fifo_intf_wb_fifo_fifoB_wptr_p1 != fifo_intf_wb_fifo_fifoB_rptr))) begin
            fifo_intf_wb_fifo_fifoB_wptr <= ((fifo_intf_wb_fifo_fifoB_wptr + 1) % (2 ** 9));
        end
        else begin
            if ((fifo_intf_wb_fifo_wr && (fifo_intf_wb_fifo_fifoB_wptr_p1 == fifo_intf_wb_fifo_fifoB_rptr))) begin
                $write("SYNC FIFO DATA DROPPED");
                $write("\n");
            end
        end
    end
end


assign fifo_intf_fx2_wb_di = fifo_intf_wb_fifo_fifoB_dout_mem;
assign fifo_intf_wb_fifo_fifoB_din_mem = fifo_intf_wb_fifo_di;
assign fifo_intf_fx2_wb_di_vld = (fifo_intf_wb_fifo_fifoB__vld & fifo_intf_fx2_wb_rd);

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_FMEM_RD_RTL
    fifo_intf_wb_fifo_fifoB_fmem__dout <= fifo_intf_wb_fifo_fifoB_fmem_mem[fifo_intf_wb_fifo_fifoB_rptr];
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_FMEM_WR_RTL
    fifo_intf_wb_fifo_fifoB_fmem__wr <= fifo_intf_wb_fifo_wr;
    fifo_intf_wb_fifo_fifoB_fmem__addr_w <= fifo_intf_wb_fifo_fifoB_wptr;
    fifo_intf_wb_fifo_fifoB_fmem__din <= fifo_intf_wb_fifo_fifoB_din_mem;
    if (fifo_intf_wb_fifo_fifoB_fmem__wr) begin
        fifo_intf_wb_fifo_fifoB_fmem_mem[fifo_intf_wb_fifo_fifoB_fmem__addr_w] <= fifo_intf_wb_fifo_fifoB_fmem__din;
    end
end


assign fifo_intf_wb_fifo_fifoB_dout_mem = fifo_intf_wb_fifo_fifoB_fmem__dout;

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_AE
    if ((((fifo_intf_wb_fifo_fifoB_rptr + 1) == fifo_intf_wb_fifo_fifoB_wptr) || fifo_intf_fx2_wb_empty)) begin
        fifo_intf_wb_fifo_aemptyb <= 1'b1;
    end
    else begin
        fifo_intf_wb_fifo_aemptyb <= 1'b0;
    end
end

always @(fifo_intf_wb_fifo_fifoB_wptr_p2, fifo_intf_wb_fifo_fifoB_rptr, fifo_intf_wb_fifo_nfullb) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_AF
    if (((fifo_intf_wb_fifo_fifoB_wptr_p2 == fifo_intf_wb_fifo_fifoB_rptr) || fifo_intf_wb_fifo_nfullb)) begin
        fifo_intf_wb_fifo_full <= 1'b1;
    end
    else begin
        fifo_intf_wb_fifo_full <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_D_RD
    fifo_intf_wb_fifo_fifoB__rd <= fifo_intf_fx2_wb_rd;
    fifo_intf_wb_fifo_fifoB__rptr_d <= fifo_intf_wb_fifo_fifoB_rptr;
end

always @(fifo_intf_wb_fifo_fifoB_wptr_p1, fifo_intf_wb_fifo_fifoB_rptr) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_F
    if ((fifo_intf_wb_fifo_fifoB_wptr_p1 == fifo_intf_wb_fifo_fifoB_rptr)) begin
        fifo_intf_wb_fifo_nfullb <= 1'b1;
    end
    else begin
        fifo_intf_wb_fifo_nfullb <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_E
    if ((fifo_intf_wb_fifo_fifoB_rptr == fifo_intf_wb_fifo_fifoB_wptr)) begin
        fifo_intf_fx2_wb_empty <= 1'b1;
        fifo_intf_wb_fifo_fifoB__empty <= 0;
    end
    else begin
        if ((fifo_intf_wb_fifo_fifoB__empty == 0)) begin
            fifo_intf_wb_fifo_fifoB__empty <= 1;
        end
        else begin
            if ((fifo_intf_wb_fifo_fifoB__empty == 1)) begin
                fifo_intf_wb_fifo_fifoB__empty <= 2;
            end
            else begin
                fifo_intf_wb_fifo_fifoB__empty <= 3;
                fifo_intf_fx2_wb_empty <= 1'b0;
            end
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_WB_FIFO_FIFOB_RTL_RD
    if (fifo_intf_ireset) begin
        fifo_intf_wb_fifo_fifoB__rptr_c <= 0;
        fifo_intf_wb_fifo_fifoB__vld <= 1'b0;
    end
    else begin
        if ((fifo_intf_fx2_wb_rd && (fifo_intf_wb_fifo_fifoB__rptr_c != fifo_intf_wb_fifo_fifoB_wptr))) begin
            fifo_intf_wb_fifo_fifoB__rptr_c <= ((fifo_intf_wb_fifo_fifoB__rptr_c + 1) % (2 ** 9));
            fifo_intf_wb_fifo_fifoB__vld <= 1'b1;
        end
        else begin
            fifo_intf_wb_fifo_fifoB__vld <= 1'b0;
        end
        if (((!fifo_intf_fx2_wb_rd) && fifo_intf_wb_fifo_fifoB__rd)) begin
            fifo_intf_wb_fifo_fifoB__rptr_c <= fifo_intf_wb_fifo_fifoB__rptr_d;
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_RTL2
    if (reset) begin
        fifo_intf_err_wr_fxfifo <= 0;
        fifo_intf_err_rd_fxfifo <= 0;
        fifo_intf_err_wr_ififo <= 0;
        fifo_intf_err_rd_ififo <= 0;
    end
    else begin
        if ((fifo_intf_fx2_fifo_wr && fifo_intf_fx2_fifo_full)) begin
            fifo_intf_err_wr_fxfifo <= (fifo_intf_err_wr_fxfifo + 1);
        end
        if ((fifo_intf_fx2_fifo_rd && fifo_intf_fx2_fifo_empty)) begin
            fifo_intf_err_rd_fxfifo <= (fifo_intf_err_rd_fxfifo + 1);
        end
        if ((fifo_intf_i_fifo_wr && fifo_intf_i_fifo_full)) begin
            fifo_intf_err_wr_ififo <= (fifo_intf_err_wr_ififo + 1);
        end
        if ((fifo_intf_i_fifo_rd && fifo_intf_i_fifo_empty)) begin
            fifo_intf_err_rd_ififo <= (fifo_intf_err_rd_ififo + 1);
        end
    end
end

always @(fifo_intf_i_fifo_empty, fifo_intf_lp_fifo_wr, fifo_intf_lp_fifo_di, loopback, fifo_wr, fifo_intf_lp_fifo_rd, fifo_intf_i_fifo_full, fifo_intf_i_fifo_do, fifo_rd, fifo_intf_i_fifo_do_vld, fifo_di) begin: LBR_SDR_FIFO_INTF_RTL3
    if (loopback) begin
        fifo_intf_i_fifo_di <= fifo_intf_lp_fifo_di;
        fifo_intf_i_fifo_wr <= fifo_intf_lp_fifo_wr;
        fifo_intf_i_fifo_rd <= fifo_intf_lp_fifo_rd;
        fifo_intf_lp_fifo_do <= fifo_intf_i_fifo_do;
        fifo_intf_lp_fifo_do_vld <= fifo_intf_i_fifo_do_vld;
        fifo_intf_lp_fifo_full <= fifo_intf_i_fifo_full;
        fifo_intf_lp_fifo_empty <= fifo_intf_i_fifo_empty;
        fifo_do <= 0;
        fifo_do_vld <= 1'b0;
        fifo_full <= 1'b0;
        fifo_empty <= 1'b0;
    end
    else begin
        fifo_intf_i_fifo_di <= fifo_di;
        fifo_intf_i_fifo_wr <= fifo_wr;
        fifo_intf_i_fifo_rd <= fifo_rd;
        fifo_do <= fifo_intf_i_fifo_do;
        fifo_do_vld <= fifo_intf_i_fifo_do_vld;
        fifo_full <= fifo_intf_i_fifo_full;
        fifo_empty <= fifo_intf_i_fifo_empty;
        fifo_intf_lp_fifo_do <= 0;
        fifo_intf_lp_fifo_do_vld <= 1'b0;
        fifo_intf_lp_fifo_full <= 1'b0;
        fifo_intf_lp_fifo_empty <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_RTL1
    if (reset) begin
        fifo_intf_ireset <= 1'b1;
    end
    else begin
        if (((!FLAGC) && (!FLAGD))) begin
            fifo_intf_ireset <= 1'b0;
        end
    end
end


assign fifo_intf_lp_fifo_di = fifo_intf_lp_fifo_do;
assign fifo_intf_lp_fifo_rd = ((fifo_intf__lp_fifo_rd & (~fifo_intf_lp_fifo_full)) & (~fifo_intf_lp_fifo_empty));
assign fifo_intf_lp_fifo_wr = (((fifo_intf__lp_fifo_wr & (~fifo_intf_lp_fifo_full)) & (~fifo_intf_lp_fifo_empty)) & fifo_intf_lp_fifo_do_vld);

always @(posedge IFCLK) begin: LBR_SDR_FIFO_INTF_RTL5
    if (fifo_intf_ireset) begin
        fifo_intf__lp_fifo_wr <= 1'b0;
        fifo_intf__lp_fifo_rd <= 1'b0;
    end
    else begin
        if (((!fifo_intf_lp_fifo_empty) && (!fifo_intf_lp_fifo_full))) begin
            fifo_intf__lp_fifo_rd <= 1'b1;
            fifo_intf__lp_fifo_wr <= 1'b1;
        end
        else begin
            fifo_intf__lp_fifo_rd <= 1'b0;
            fifo_intf__lp_fifo_wr <= 1'b0;
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_DGB_IT_RTL
    if (reset) begin
        fifo_intf_dbg_it <= 1'b0;
    end
    else begin
        if (fifo_intf_i_fifo_wr) begin
            fifo_intf_dbg_it <= 1'b1;
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_FX2_RTL_BUS_WR
    if (reset) begin
        fifo_intf_fx2_ep2_din <= 0;
        fifo_intf_fx2__bus_wr <= 1'b0;
    end
    else begin
        if ((fifo_intf_fx2_ep2_read && fifo_intf_fx2__slrd)) begin
            fifo_intf_fx2_ep2_din <= FDI;
            fifo_intf_fx2__bus_wr <= 1'b1;
        end
        else begin
            fifo_intf_fx2__bus_wr <= 1'b0;
        end
    end
end

always @(fifo_intf_fx2_arb_state) begin: LBR_SDR_FIFO_INTF_FX2_ARB_RTL3
    if ((fifo_intf_fx2_arb_state == 4'b0010)) begin
        fifo_intf_fx2_arb__slrd2 <= 1'b1;
    end
    else begin
        fifo_intf_fx2_arb__slrd2 <= 1'b0;
    end
    if ((fifo_intf_fx2_arb_state == 4'b0101)) begin
        fifo_intf_fx2_arb__slrd4 <= 1'b1;
    end
    else begin
        fifo_intf_fx2_arb__slrd4 <= 1'b0;
    end
    if (((fifo_intf_fx2_arb_state == 4'b0111) || (fifo_intf_fx2_arb_state == 4'b1000) || (fifo_intf_fx2_arb_state == 4'b1010) || (fifo_intf_fx2_arb_state == 4'b1011))) begin
        fifo_intf_fx2_arb__sloe <= 1'b0;
    end
    else begin
        fifo_intf_fx2_arb__sloe <= 1'b1;
    end
    if ((fifo_intf_fx2_arb_state == 4'b1000)) begin
        fifo_intf_fx2_arb__slwr6 <= 1'b1;
    end
    else begin
        fifo_intf_fx2_arb__slwr6 <= 1'b0;
    end
    if ((fifo_intf_fx2_arb_state == 4'b1011)) begin
        fifo_intf_fx2_arb__slwr8 <= 1'b1;
    end
    else begin
        fifo_intf_fx2_arb__slwr8 <= 1'b0;
    end
    if (((fifo_intf_fx2_arb_state == 4'b1001) || (fifo_intf_fx2_arb_state == 4'b1101))) begin
        fifo_intf_fx2_arb__pktend <= 1'b1;
    end
    else begin
        fifo_intf_fx2_arb__pktend <= 1'b0;
    end
end

always @(fifo_intf_fx2_arb_state) begin: LBR_SDR_FIFO_INTF_FX2_ARB_RTL2
    if (((fifo_intf_fx2_arb_state == 4'b0100) || (fifo_intf_fx2_arb_state == 4'b0101) || (fifo_intf_fx2_arb_state == 4'b0110))) begin
        fifo_intf_fx2__fifoadr <= 1;
    end
    else begin
        if (((fifo_intf_fx2_arb_state == 4'b1010) || (fifo_intf_fx2_arb_state == 4'b1011) || (fifo_intf_fx2_arb_state == 4'b1100) || (fifo_intf_fx2_arb_state == 4'b1101))) begin
            fifo_intf_fx2__fifoadr <= 3;
        end
        else begin
            if (((fifo_intf_fx2_arb_state == 4'b0001) || (fifo_intf_fx2_arb_state == 4'b0010) || (fifo_intf_fx2_arb_state == 4'b0011))) begin
                fifo_intf_fx2__fifoadr <= 0;
            end
            else begin
                if (((fifo_intf_fx2_arb_state == 4'b0111) || (fifo_intf_fx2_arb_state == 4'b1000) || (fifo_intf_fx2_arb_state == 4'b1001))) begin
                    fifo_intf_fx2__fifoadr <= 2;
                end
                else begin
                    fifo_intf_fx2__fifoadr <= 1;
                end
            end
        end
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_FX2_ARB_RTL1
    if (reset) begin
        fifo_intf_fx2_arb_state <= 4'b0000;
    end
    else begin
        if ((fifo_intf_fx2_arb_state == 4'b0000)) begin
            if (((!fifo_intf_fx2_ep2_empty) && (!fifo_intf_fx2_wb_full))) begin
                fifo_intf_fx2_arb_state <= 4'b0001;
            end
            else begin
                if (((!fifo_intf_fx2_wb_empty) && (!fifo_intf_fx2_ep6_full) && (!fifo_intf_wb_cmd_in_prog))) begin
                    fifo_intf_fx2_arb_state <= 4'b0111;
                end
                else begin
                    if (((!fifo_intf_fx2_ep4_empty) && (!fifo_intf_fx2_fifo_full))) begin
                        fifo_intf_fx2_arb_state <= 4'b0100;
                    end
                    else begin
                        if (((!fifo_intf_fx2_fifo_empty) && (!fifo_hold) && (!fifo_intf_fx2_ep8_full))) begin
                            fifo_intf_fx2_arb_state <= 4'b1010;
                        end
                    end
                end
            end
        end
        else begin
            if ((fifo_intf_fx2_arb_state == 4'b0001)) begin
                fifo_intf_fx2_arb_state <= 4'b0010;
            end
            else begin
                if ((fifo_intf_fx2_arb_state == 4'b0010)) begin
                    fifo_intf_fx2_arb_state <= 4'b0011;
                end
                else begin
                    if ((fifo_intf_fx2_arb_state == 4'b0011)) begin
                        fifo_intf_fx2_arb_state <= 4'b0000;
                    end
                    else begin
                        if ((fifo_intf_fx2_arb_state == 4'b0100)) begin
                            fifo_intf_fx2_arb_state <= 4'b0101;
                        end
                        else begin
                            if ((fifo_intf_fx2_arb_state == 4'b0101)) begin
                                if ((fifo_intf_fx2_ep4_empty || fifo_intf_fx2_fifo_full)) begin
                                    fifo_intf_fx2_arb_state <= 4'b0110;
                                end
                            end
                            else begin
                                if ((fifo_intf_fx2_arb_state == 4'b0110)) begin
                                    fifo_intf_fx2_arb_state <= 4'b0000;
                                end
                                else begin
                                    if ((fifo_intf_fx2_arb_state == 4'b0111)) begin
                                        fifo_intf_fx2_arb_state <= 4'b1000;
                                    end
                                    else begin
                                        if ((fifo_intf_fx2_arb_state == 4'b1000)) begin
                                            if ((fifo_intf_fx2_wb_empty || fifo_intf_fx2_ep6_full)) begin
                                                fifo_intf_fx2_arb_state <= 4'b1001;
                                            end
                                        end
                                        else begin
                                            if ((fifo_intf_fx2_arb_state == 4'b1001)) begin
                                                fifo_intf_fx2_arb_state <= 4'b0000;
                                            end
                                            else begin
                                                if ((fifo_intf_fx2_arb_state == 4'b1010)) begin
                                                    fifo_intf_fx2_arb_state <= 4'b1011;
                                                end
                                                else begin
                                                    if ((fifo_intf_fx2_arb_state == 4'b1011)) begin
                                                        if ((fifo_intf_fx2_fifo_empty && (!fifo_intf_fx2_ep8_full))) begin
                                                            fifo_intf_fx2_arb_state <= 4'b1101;
                                                        end
                                                        else begin
                                                            if (fifo_intf_fx2_ep8_full) begin
                                                                fifo_intf_fx2_arb_state <= 4'b1100;
                                                            end
                                                        end
                                                    end
                                                    else begin
                                                        if ((fifo_intf_fx2_arb_state == 4'b1100)) begin
                                                            fifo_intf_fx2_arb_state <= 4'b0000;
                                                        end
                                                        else begin
                                                            if ((fifo_intf_fx2_arb_state == 4'b1101)) begin
                                                                fifo_intf_fx2_arb_state <= 4'b0000;
                                                            end
                                                            else begin
                                                                if (1'b0 !== 1) begin
                                                                    $display("*** AssertionError ***");
                                                                end
                                                                fifo_intf_fx2_arb_state <= 4'b0000;
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end


assign fifo_intf_fx2__sloe = fifo_intf_fx2_arb__sloe;
assign fifo_intf_fx2__slrd = (((fifo_intf_fx2_arb__slrd2 & (~fifo_intf_fx2_ep2_empty)) & (~fifo_intf_fx2_wb_full)) | ((fifo_intf_fx2_arb__slrd4 & (~fifo_intf_fx2_ep4_empty)) & (~fifo_intf_fx2_fifo_full)));
assign fifo_intf_fx2__slwr = (((fifo_intf_fx2_arb__slwr6 & (~fifo_intf_fx2_ep6_full)) & (~fifo_intf_fx2_wb_empty)) | ((fifo_intf_fx2_arb__slwr8 & (~fifo_intf_fx2_ep8_full)) & (~fifo_intf_fx2_fifo_empty)));
assign fifo_intf_fx2__pktend = fifo_intf_fx2_arb__pktend;
assign fifo_intf_fx2_ep2_read = fifo_intf_fx2_arb__slrd2;
assign fifo_intf_fx2_ep6_write = fifo_intf_fx2_arb__slwr6;
assign fifo_intf_fx2_ep4_read = fifo_intf_fx2_arb__slrd4;
assign fifo_intf_fx2_ep8_write = fifo_intf_fx2_arb__slwr8;

always @(fifo_intf_fx2__slrd, fifo_intf_fx2_wb_full, FLAGD, FLAGC, FLAGB, FLAGA, fifo_intf_fx2__vld, fifo_intf_fx2_ep8_write, fifo_intf_fx2_ep6_write, fifo_intf_fx2__fifo_wr, fifo_intf_fx2__pktend, fifo_intf_fx2__fifoadr, fifo_intf_fx2__bus_wr, fifo_intf_fx2_fifo_full, fifo_intf_fx2_ep2_din, fifo_intf_fx2__sloe, fifo_intf_fx2__slwr, fifo_intf_fx2_ep4_din, fifo_intf_fx2_fifo_di, fifo_intf_fx2_wb_di) begin: LBR_SDR_FIFO_INTF_FX2_RTL_ASSIGNMENTS
    fifo_intf_fx2_ep2_empty <= FLAGA;
    fifo_intf_fx2_ep6_full <= FLAGC;
    fifo_intf_fx2_ep4_empty <= FLAGB;
    fifo_intf_fx2_ep8_full <= FLAGD;
    fifo_intf_fx2_wb_do <= fifo_intf_fx2_ep2_din;
    fifo_intf_fx2_fifo_do <= fifo_intf_fx2_ep4_din;
    fifo_intf_fx2_dbg <= 0;
    fifo_intf_fx2_fifo_wr <= (fifo_intf_fx2__fifo_wr & (~fifo_intf_fx2_fifo_full));
    fifo_intf_fx2_wb_wr <= (fifo_intf_fx2__bus_wr & (~fifo_intf_fx2_wb_full));
    SLWR <= (fifo_intf_fx2__slwr & fifo_intf_fx2__vld);
    SLRD <= fifo_intf_fx2__slrd;
    SLOE <= fifo_intf_fx2__sloe;
    PKTEND <= fifo_intf_fx2__pktend;
    FIFOADR <= fifo_intf_fx2__fifoadr;
    if (fifo_intf_fx2_ep6_write) begin
        FDO <= fifo_intf_fx2_wb_di;
    end
    else begin
        FDO <= fifo_intf_fx2_fifo_di;
    end
    if (fifo_intf_fx2_ep6_write) begin
        fifo_intf_fx2_wb_rd <= fifo_intf_fx2__slwr;
    end
    else begin
        fifo_intf_fx2_wb_rd <= 1'b0;
    end
    if (fifo_intf_fx2_ep8_write) begin
        fifo_intf_fx2_fifo_rd <= fifo_intf_fx2__slwr;
    end
    else begin
        fifo_intf_fx2_fifo_rd <= 1'b0;
    end
end

always @(posedge sys_clk) begin: LBR_SDR_FIFO_INTF_FX2_RTL_DATA_WR
    if (reset) begin
        fifo_intf_fx2_ep4_din <= 0;
        fifo_intf_fx2__fifo_wr <= 1'b0;
    end
    else begin
        if ((fifo_intf_fx2_ep4_read && fifo_intf_fx2__slrd)) begin
            fifo_intf_fx2_ep4_din <= FDI;
            fifo_intf_fx2__fifo_wr <= 1'b1;
        end
        else begin
            if ((fifo_intf_fx2__fifo_wr && fifo_intf_fx2_fifo_full)) begin
                fifo_intf_fx2__fifo_wr <= 1'b0;
            end
            else begin
                fifo_intf_fx2__fifo_wr <= 1'b0;
            end
        end
    end
end


assign fifo_intf_fx2__vld = (fifo_intf_fx2_wb_di_vld | fifo_intf_fx2_fifo_di_vld);

always @(posedge sys_clk) begin: LBR_SDR_RTL_LED_SELECT
    if ((led_sel == 0)) begin
        led <= 85;
    end
    else begin
        if ((led_sel == 1)) begin
            led <= led_gpio;
        end
        else begin
            if ((led_sel == 2)) begin
                led <= fx2_dbg;
            end
            else begin
                led <= 189;
            end
        end
    end
end

always @(posedge wb_clk) begin: LBR_SDR_RMP0_RTL_RAMP
    if ((!wb_rst)) begin
        rmp0_ramp <= 0;
        fifo_wr_rmp <= 1'b0;
        fifo_di_rmp <= 0;
        rmp0_wcnt <= 1023;
    end
    else begin
        if ((rmp0_enable && (!fifo_full))) begin
            fifo_wr_rmp <= 1'b1;
            fifo_di_rmp <= rmp0_ramp;
            rmp0_ramp <= ((rmp0_ramp + 1) % (2 ** 8));
        end
        else begin
            fifo_wr_rmp <= 1'b0;
            fifo_di_rmp <= 0;
        end
    end
end


assign rmp0_enable = rmp0_CFG[0];


assign rmp0_CFG = rmp0_rwRegisters[0];


assign rmp0_wb_wr = rmp0_regFile__wb_wr;
assign rmp0_wb_acc = rmp0_regFile__wb_acc;


assign rmp0_regFile__wb_wr = (rmp0_regFile__wb_acc & wb_we);


assign rmp0_regFile__wb_acc = (wb_cyc & wb_stb);
assign rmp_ack = rmp0_regFile__wb_ack;

always @(posedge wb_clk) begin: LBR_SDR_RMP0_REGFILE_RTL_WRITE_REG
    if ((!wb_rst)) begin
        rmp0_rwRegisters[0] <= 0;
    end
    else begin
        if ((rmp0_regFile__wb_wr && rmp0_regFile__wb_sel)) begin
            if ((wb_adr == (0 + 2048))) begin
                rmp0_rwRegisters[0] <= wb_dat_o;
            end
        end
    end
end

always @(rmp0_regFile__wb_sel, rmp0_regFile__wb_do) begin: LBR_SDR_RMP0_REGFILE_RTL_READ
    if (rmp0_regFile__wb_sel) begin
        rmp_dat_i <= rmp0_regFile__wb_do;
    end
    else begin
        rmp_dat_i <= 0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_RMP0_REGFILE_RTL_READ_REG
    if ((wb_adr == (0 + 2048))) begin
        rmp0_regFile__wb_do <= rmp0_rwRegisters[0];
    end
end

always @(posedge wb_clk) begin: LBR_SDR_RMP0_REGFILE_RTL_SELECTED
    if (((wb_adr >= (0 + 2048)) && (wb_adr <= (0 + 2048)))) begin
        rmp0_regFile__wb_sel <= 1'b1;
    end
    else begin
        rmp0_regFile__wb_sel <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_RMP0_REGFILE_RTL_RW_STOBES
    if (((wb_adr == (0 + 2048)) && rmp0_regFile__wb_ack)) begin
        if (rmp0_regFile__wb_wr) begin
            rmp0_rwWr[0] <= 1'b1;
            rmp0_rwRd[0] <= 1'b0;
        end
        else begin
            rmp0_rwWr[0] <= 1'b0;
            rmp0_rwRd[0] <= 1'b1;
        end
    end
    else begin
        rmp0_rwWr[0] <= 1'b0;
        rmp0_rwRd[0] <= 1'b0;
    end
end

always @(posedge wb_clk) begin: LBR_SDR_RMP0_REGFILE_RTL_ACK
    if ((!wb_rst)) begin
        rmp0_regFile__wb_ack <= 1'b0;
    end
    else begin
        rmp0_regFile__wb_ack <= (rmp0_regFile__wb_acc & (~rmp0_regFile__wb_ack));
    end
end

endmodule
